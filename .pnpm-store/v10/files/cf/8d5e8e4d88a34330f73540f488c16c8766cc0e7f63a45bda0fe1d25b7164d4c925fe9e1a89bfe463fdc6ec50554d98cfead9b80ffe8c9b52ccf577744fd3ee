import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import * as React from "react";
import { Input } from "../ui/input.js";
import { Popover, PopoverTrigger, PopoverContent, PopoverAnchor } from "../ui/popover.js";
import { usePopoverContainer } from "../../context/PopoverContainerContext.js";
import { ChevronDown } from "lucide-react";
/**
 * Renders an `Input` whose end enhancer acts as a trigger for a popover.
 * The popover is positioned below the input by default.
 */
export const InputWithPopover = React.forwardRef(({ popoverContent, triggerIcon, container, className, ...inputProps }, ref) => {
    const contextContainer = usePopoverContainer();
    // Fallback icon (simple SVG "plus" sign) if consumer doesn't supply one
    const defaultIcon = (_jsx("div", { className: "flex items-center justify-center hover:bg-slate-100 rounded-md cursor-pointer w-5 h-5", children: _jsx(ChevronDown, { className: "w-4 h-4 text-slate-500" }) }));
    return (_jsxs(Popover, { children: [_jsx(PopoverAnchor, { className: "block", children: _jsx(Input, { ref: ref, className: className, ...inputProps, endEnhancer: _jsx(PopoverTrigger, { asChild: true, children: triggerIcon || defaultIcon }) }) }), _jsx(PopoverContent, { side: "bottom", align: "start", sideOffset: 16, className: "w-72 p-3 bg-white rounded-lg shadow-lg border-slate-200 z-[9999999999]", container: container ?? contextContainer ?? undefined, children: popoverContent })] }));
});
InputWithPopover.displayName = "InputWithPopover";
