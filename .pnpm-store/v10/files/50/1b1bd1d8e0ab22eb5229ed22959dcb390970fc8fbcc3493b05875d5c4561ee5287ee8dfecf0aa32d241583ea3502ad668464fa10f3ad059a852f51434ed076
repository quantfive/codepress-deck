import { isString as s, isRegExp as o, isVueViewModel as u } from "./index132.js";
function l(e, i = 0) {
  return typeof e != "string" || i === 0 || e.length <= i ? e : `${e.slice(0, i)}...`;
}
function a(e, i) {
  if (!Array.isArray(e))
    return "";
  const n = [];
  for (let r = 0; r < e.length; r++) {
    const t = e[r];
    try {
      u(t) ? n.push("[VueViewModel]") : n.push(String(t));
    } catch {
      n.push("[value cannot be serialized]");
    }
  }
  return n.join(i);
}
function f(e, i, n = !1) {
  return s(e) ? o(i) ? i.test(e) : s(i) ? n ? e === i : e.includes(i) : !1 : !1;
}
function g(e, i = [], n = !1) {
  return i.some((r) => f(e, r, n));
}
export {
  f as isMatchingPattern,
  a as safeJoin,
  g as stringMatchesSomePattern,
  l as truncate
};
