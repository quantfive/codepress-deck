import { SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME as e, SEMANTIC_ATTRIBUTE_PROFILE_ID as a } from "./index192.js";
function d(t) {
  const { trace_id: r, parent_span_id: s, span_id: _, status: m, origin: o, data: i, op: n } = t.contexts?.trace ?? {};
  return {
    data: i ?? {},
    description: t.transaction,
    op: n,
    parent_span_id: s,
    span_id: _ ?? "",
    start_timestamp: t.start_timestamp ?? 0,
    status: m,
    timestamp: t.timestamp,
    trace_id: r ?? "",
    origin: o,
    profile_id: i?.[a],
    exclusive_time: i?.[e],
    measurements: t.measurements,
    is_segment: !0
  };
}
function p(t) {
  return {
    type: "transaction",
    timestamp: t.timestamp,
    start_timestamp: t.start_timestamp,
    transaction: t.description,
    contexts: {
      trace: {
        trace_id: t.trace_id,
        span_id: t.span_id,
        parent_span_id: t.parent_span_id,
        op: t.op,
        status: t.status,
        origin: t.origin,
        data: {
          ...t.data,
          ...t.profile_id && { [a]: t.profile_id },
          ...t.exclusive_time && { [e]: t.exclusive_time }
        }
      }
    },
    measurements: t.measurements
  };
}
export {
  p as convertSpanJsonToTransactionEvent,
  d as convertTransactionEventToSpanJson
};
