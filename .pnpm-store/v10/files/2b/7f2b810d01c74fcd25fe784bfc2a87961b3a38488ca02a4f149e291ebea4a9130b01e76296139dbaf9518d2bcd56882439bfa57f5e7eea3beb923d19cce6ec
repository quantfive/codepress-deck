import { j as e } from "./index7.js";
import C, { useState as m } from "react";
import { Button as d } from "./index54.js";
import { Popover as B, PopoverTrigger as k, PopoverContent as P } from "./index57.js";
import { stripBranchPrefix as F, checkIsOnCodepressBranch as w, addBranchPrefix as I } from "./index60.js";
import { useDeployment as M } from "./index8.js";
import E from "./index112.js";
import p from "./index114.js";
import z from "./index90.js";
import D from "./index88.js";
const A = ({
  open: n,
  onOpenChange: u,
  branchName: a,
  onSave: o,
  isSaving: r
}) => {
  const { shouldShowSaveDialog: b } = M(), [l, c] = m(""), [h, x] = m(!1), j = [
    "main",
    "master",
    "develop",
    "dev",
    "staging",
    "development",
    "stage"
  ].includes(a), g = b(a), [s, i] = m(
    g ? "new" : "existing"
  ), y = () => {
    const t = [
      "swift",
      "bright",
      "clean",
      "smart",
      "quick",
      "fresh",
      "bold",
      "calm",
      "neat",
      "cool"
    ], f = [
      "tree",
      "rock",
      "wave",
      "star",
      "moon",
      "fire",
      "leaf",
      "song",
      "path",
      "dawn"
    ], v = t[Math.floor(Math.random() * t.length)], N = f[Math.floor(Math.random() * f.length)];
    return `${v}-${N}`;
  };
  return C.useEffect(() => {
    if (n && !h) {
      i("new");
      const t = y();
      c(t), x(!0);
    } else n || x(!1);
  }, [n, h]), /* @__PURE__ */ e.jsxs("div", { className: "flex items-stretch rounded-md overflow-hidden", children: [
    /* @__PURE__ */ e.jsx(
      d,
      {
        onClick: () => o(),
        disabled: r,
        className: "flex items-center justify-center px-3 py-2 bg-gray-900 hover:bg-gray-800 text-sm text-white rounded-none",
        children: r ? /* @__PURE__ */ e.jsxs(e.Fragment, { children: [
          "Saving",
          /* @__PURE__ */ e.jsx(p, { className: "ml-2 h-4 w-4 animate-spin" })
        ] }) : "Save"
      }
    ),
    /* @__PURE__ */ e.jsxs(B, { open: n, onOpenChange: u, children: [
      /* @__PURE__ */ e.jsx(k, { asChild: !0, children: /* @__PURE__ */ e.jsx(
        d,
        {
          disabled: r,
          className: "px-2 py-2 bg-gray-900 hover:bg-gray-800 text-white rounded-none border-l border-gray-700",
          children: n ? /* @__PURE__ */ e.jsx(z, { className: "h-4 w-4" }) : /* @__PURE__ */ e.jsx(D, { className: "h-4 w-4" })
        }
      ) }),
      /* @__PURE__ */ e.jsxs(
        P,
        {
          className: "z-[10050] w-[480px] p-4 shadow-xl border border-gray-200 bg-white rounded-xl",
          side: "top",
          sideOffset: 24,
          align: "center",
          children: [
            /* @__PURE__ */ e.jsx("h4", { className: "text-base font-semibold mb-1", children: "Where would you like to save?" }),
            /* @__PURE__ */ e.jsx("p", { className: "text-sm text-gray-600 mb-4", children: "When you save, CodePress will generate a shareable link with your updates." }),
            /* @__PURE__ */ e.jsxs("div", { className: "space-y-3 mb-4", children: [
              /* @__PURE__ */ e.jsxs("div", { className: "flex items-center space-x-3", children: [
                /* @__PURE__ */ e.jsx(
                  "input",
                  {
                    type: "radio",
                    id: "newBranch",
                    name: "saveChoice",
                    checked: s === "new",
                    onChange: () => i("new"),
                    className: "w-4 h-4 text-gray-900 focus:ring-gray-900"
                  }
                ),
                /* @__PURE__ */ e.jsxs(
                  "label",
                  {
                    htmlFor: "newBranch",
                    className: "text-sm font-medium text-gray-900",
                    children: [
                      "New branch ",
                      g ? "(recommended)" : ""
                    ]
                  }
                )
              ] }),
              /* @__PURE__ */ e.jsxs("div", { className: "flex items-center space-x-3", children: [
                /* @__PURE__ */ e.jsx(
                  "input",
                  {
                    type: "radio",
                    id: "existingBranch",
                    name: "saveChoice",
                    checked: s === "existing",
                    onChange: () => i("existing"),
                    className: "w-4 h-4 text-gray-900 focus:ring-gray-900"
                  }
                ),
                /* @__PURE__ */ e.jsxs(
                  "label",
                  {
                    htmlFor: "existingBranch",
                    className: "text-sm font-medium text-gray-900",
                    children: [
                      "Existing branch",
                      j && /* @__PURE__ */ e.jsx("span", { className: "text-amber-600 ml-1", children: "(main branch)" })
                    ]
                  }
                )
              ] })
            ] }),
            /* @__PURE__ */ e.jsx(
              "label",
              {
                htmlFor: "branchName",
                className: "text-sm text-gray-600 mb-1 block",
                children: s === "new" ? "New branch name" : "Branch name"
              }
            ),
            /* @__PURE__ */ e.jsx("div", { className: "mb-4", children: /* @__PURE__ */ e.jsx(
              E,
              {
                id: "branchName",
                showPrefix: s === "new" || s === "existing" && w(a),
                placeholder: s === "new" ? "Enter branch name" : a,
                value: s === "new" ? l : w(a) ? F(a) : a,
                onChange: (t) => {
                  s === "new" || i("new"), c(t);
                }
              }
            ) }),
            /* @__PURE__ */ e.jsx(
              d,
              {
                className: "w-full bg-gray-900 hover:bg-gray-800 text-white text-sm font-normal",
                onClick: () => {
                  s === "new" ? o(I(l)) : o();
                },
                disabled: r || s === "new" && !l.trim(),
                children: r ? /* @__PURE__ */ e.jsxs(e.Fragment, { children: [
                  "Saving",
                  /* @__PURE__ */ e.jsx(p, { className: "ml-2 h-4 w-4 animate-spin" })
                ] }) : `Save to ${s === "new" ? "new" : "existing"} branch`
              }
            )
          ]
        }
      )
    ] })
  ] });
};
export {
  A as default
};
