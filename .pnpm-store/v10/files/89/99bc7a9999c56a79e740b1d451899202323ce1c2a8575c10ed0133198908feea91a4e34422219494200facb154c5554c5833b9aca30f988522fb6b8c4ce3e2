import l from "react";
import { createContextScope as Q } from "./index99.js";
import { createCollection as W } from "./index231.js";
import { useComposedRefs as X } from "./index98.js";
import { composeEventHandlers as Z } from "./index97.js";
import { useControllableState as D } from "./index109.js";
import { Primitive as O } from "./index107.js";
import { createCollapsibleScope as T, Root as $, Trigger as ee, Content as oe } from "./index232.js";
import { useId as re } from "./index103.js";
import { useDirection as te } from "./index233.js";
import { j as n } from "./index7.js";
var d = "Accordion", ne = ["Home", "End", "ArrowDown", "ArrowUp", "ArrowLeft", "ArrowRight"], [N, ce, ie] = W(d), [g] = Q(d, [
  ie,
  T
]), y = T(), M = l.forwardRef(
  (o, c) => {
    const { type: e, ...t } = o, i = t, r = t;
    return /* @__PURE__ */ n.jsx(N.Provider, { scope: o.__scopeAccordion, children: e === "multiple" ? /* @__PURE__ */ n.jsx(de, { ...r, ref: c }) : /* @__PURE__ */ n.jsx(le, { ...i, ref: c }) });
  }
);
M.displayName = d;
var [V, ae] = g(d), [H, se] = g(
  d,
  { collapsible: !1 }
), le = l.forwardRef(
  (o, c) => {
    const {
      value: e,
      defaultValue: t,
      onValueChange: i = () => {
      },
      collapsible: r = !1,
      ...s
    } = o, [a, p] = D({
      prop: e,
      defaultProp: t ?? "",
      onChange: i,
      caller: d
    });
    return /* @__PURE__ */ n.jsx(
      V,
      {
        scope: o.__scopeAccordion,
        value: l.useMemo(() => a ? [a] : [], [a]),
        onItemOpen: p,
        onItemClose: l.useCallback(() => r && p(""), [r, p]),
        children: /* @__PURE__ */ n.jsx(H, { scope: o.__scopeAccordion, collapsible: r, children: /* @__PURE__ */ n.jsx(K, { ...s, ref: c }) })
      }
    );
  }
), de = l.forwardRef((o, c) => {
  const {
    value: e,
    defaultValue: t,
    onValueChange: i = () => {
    },
    ...r
  } = o, [s, a] = D({
    prop: e,
    defaultProp: t ?? [],
    onChange: i,
    caller: d
  }), p = l.useCallback(
    (v) => a((u = []) => [...u, v]),
    [a]
  ), m = l.useCallback(
    (v) => a((u = []) => u.filter((I) => I !== v)),
    [a]
  );
  return /* @__PURE__ */ n.jsx(
    V,
    {
      scope: o.__scopeAccordion,
      value: s,
      onItemOpen: p,
      onItemClose: m,
      children: /* @__PURE__ */ n.jsx(H, { scope: o.__scopeAccordion, collapsible: !0, children: /* @__PURE__ */ n.jsx(K, { ...r, ref: c }) })
    }
  );
}), [pe, b] = g(d), K = l.forwardRef(
  (o, c) => {
    const { __scopeAccordion: e, disabled: t, dir: i, orientation: r = "vertical", ...s } = o, a = l.useRef(null), p = X(a, c), m = ce(e), u = te(i) === "ltr", I = Z(o.onKeyDown, (C) => {
      if (!ne.includes(C.key)) return;
      const F = C.target, h = m().filter((j) => !j.ref.current?.disabled), x = h.findIndex((j) => j.ref.current === F), k = h.length;
      if (x === -1) return;
      C.preventDefault();
      let f = x;
      const _ = 0, R = k - 1, w = () => {
        f = x + 1, f > R && (f = _);
      }, P = () => {
        f = x - 1, f < _ && (f = R);
      };
      switch (C.key) {
        case "Home":
          f = _;
          break;
        case "End":
          f = R;
          break;
        case "ArrowRight":
          r === "horizontal" && (u ? w() : P());
          break;
        case "ArrowDown":
          r === "vertical" && w();
          break;
        case "ArrowLeft":
          r === "horizontal" && (u ? P() : w());
          break;
        case "ArrowUp":
          r === "vertical" && P();
          break;
      }
      const J = f % k;
      h[J].ref.current?.focus();
    });
    return /* @__PURE__ */ n.jsx(
      pe,
      {
        scope: e,
        disabled: t,
        direction: i,
        orientation: r,
        children: /* @__PURE__ */ n.jsx(N.Slot, { scope: e, children: /* @__PURE__ */ n.jsx(
          O.div,
          {
            ...s,
            "data-orientation": r,
            ref: p,
            onKeyDown: t ? void 0 : I
          }
        ) })
      }
    );
  }
), A = "AccordionItem", [fe, S] = g(A), L = l.forwardRef(
  (o, c) => {
    const { __scopeAccordion: e, value: t, ...i } = o, r = b(A, e), s = ae(A, e), a = y(e), p = re(), m = t && s.value.includes(t) || !1, v = r.disabled || o.disabled;
    return /* @__PURE__ */ n.jsx(
      fe,
      {
        scope: e,
        open: m,
        disabled: v,
        triggerId: p,
        children: /* @__PURE__ */ n.jsx(
          $,
          {
            "data-orientation": r.orientation,
            "data-state": B(m),
            ...a,
            ...i,
            ref: c,
            disabled: v,
            open: m,
            onOpenChange: (u) => {
              u ? s.onItemOpen(t) : s.onItemClose(t);
            }
          }
        )
      }
    );
  }
);
L.displayName = A;
var z = "AccordionHeader", G = l.forwardRef(
  (o, c) => {
    const { __scopeAccordion: e, ...t } = o, i = b(d, e), r = S(z, e);
    return /* @__PURE__ */ n.jsx(
      O.h3,
      {
        "data-orientation": i.orientation,
        "data-state": B(r.open),
        "data-disabled": r.disabled ? "" : void 0,
        ...t,
        ref: c
      }
    );
  }
);
G.displayName = z;
var E = "AccordionTrigger", U = l.forwardRef(
  (o, c) => {
    const { __scopeAccordion: e, ...t } = o, i = b(d, e), r = S(E, e), s = se(E, e), a = y(e);
    return /* @__PURE__ */ n.jsx(N.ItemSlot, { scope: e, children: /* @__PURE__ */ n.jsx(
      ee,
      {
        "aria-disabled": r.open && !s.collapsible || void 0,
        "data-orientation": i.orientation,
        id: r.triggerId,
        ...a,
        ...t,
        ref: c
      }
    ) });
  }
);
U.displayName = E;
var Y = "AccordionContent", q = l.forwardRef(
  (o, c) => {
    const { __scopeAccordion: e, ...t } = o, i = b(d, e), r = S(Y, e), s = y(e);
    return /* @__PURE__ */ n.jsx(
      oe,
      {
        role: "region",
        "aria-labelledby": r.triggerId,
        "data-orientation": i.orientation,
        ...s,
        ...t,
        ref: c,
        style: {
          "--radix-accordion-content-height": "var(--radix-collapsible-content-height)",
          "--radix-accordion-content-width": "var(--radix-collapsible-content-width)",
          ...o.style
        }
      }
    );
  }
);
q.displayName = Y;
function B(o) {
  return o ? "open" : "closed";
}
var Re = M, we = L, Pe = G, je = U, Ee = q;
export {
  M as Accordion,
  q as AccordionContent,
  G as AccordionHeader,
  L as AccordionItem,
  U as AccordionTrigger,
  Ee as Content,
  Pe as Header,
  we as Item,
  Re as Root,
  je as Trigger
};
