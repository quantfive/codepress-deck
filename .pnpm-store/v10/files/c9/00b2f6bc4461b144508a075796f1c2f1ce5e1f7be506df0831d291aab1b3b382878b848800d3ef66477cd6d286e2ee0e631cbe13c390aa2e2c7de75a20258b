import o from "./index245.js";
import x from "./index247.js";
import j, { useMemo as y } from "react";
import { hsvaToHslaString as C } from "./index244.js";
import _ from "./index248.js";
import { Pointer as b } from "./index261.js";
import { j as f } from "./index7.js";
var w = ["prefixCls", "radius", "pointer", "className", "hue", "style", "hsva", "onChange"], N = /* @__PURE__ */ j.forwardRef((i, u) => {
  var n, {
    prefixCls: t = "w-color-saturation",
    radius: m = 0,
    pointer: a,
    className: h,
    hue: p = 0,
    style: d,
    hsva: e,
    onChange: s
  } = i, v = x(i, w), c = o({
    width: 200,
    height: 200,
    borderRadius: m
  }, d, {
    position: "relative"
  }), l = (r, R) => {
    s && e && s({
      h: e.h,
      s: r.left * 100,
      v: (1 - r.top) * 100,
      a: e.a
      // source: 'hsv',
    });
  }, g = y(() => {
    if (!e) return null;
    var r = {
      top: 100 - e.v + "%",
      left: e.s + "%",
      color: C(e)
    };
    return a && typeof a == "function" ? a(o({
      prefixCls: t
    }, r)) : /* @__PURE__ */ f.jsx(b, o({
      prefixCls: t
    }, r));
  }, [e, a, t]);
  return /* @__PURE__ */ f.jsx(_, o({
    className: [t, h || ""].filter(Boolean).join(" ")
  }, v, {
    style: o({
      position: "absolute",
      inset: 0,
      cursor: "crosshair",
      backgroundImage: "linear-gradient(0deg, #000, transparent), linear-gradient(90deg, #fff, hsl(" + ((n = e?.h) != null ? n : p) + ", 100%, 50%))"
    }, c),
    ref: u,
    onMove: l,
    onDown: l,
    children: g
  }));
});
N.displayName = "Saturation";
export {
  N as default
};
