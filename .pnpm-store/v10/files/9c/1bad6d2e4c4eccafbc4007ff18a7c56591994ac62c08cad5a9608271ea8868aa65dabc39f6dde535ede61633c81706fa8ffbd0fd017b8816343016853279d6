import E from "./index245.js";
import j from "./index247.js";
import R, { useRef as h, useState as _, useCallback as i, useEffect as k } from "react";
import { useEventCallback as p, preventDefaultMove as g, isTouch as c, getRelativePosition as x } from "./index270.js";
import { clamp as q } from "./index270.js";
import { j as y } from "./index7.js";
var N = ["prefixCls", "className", "onMove", "onDown"], I = /* @__PURE__ */ R.forwardRef((m, S) => {
  var {
    prefixCls: b = "w-color-interactive",
    className: D,
    onMove: M,
    onDown: L
  } = m, f = j(m, N), r = h(null), n = h(!1), [d, u] = _(!1), s = p(M), l = p(L), C = (e) => n.current && !c(e) ? !1 : (n.current = c(e), !0), t = i((e) => {
    if (g(e), !!r.current) {
      var a = c(e) ? e.touches.length > 0 : e.buttons > 0;
      if (!a) {
        u(!1);
        return;
      }
      s?.(x(r.current, e), e);
    }
  }, [s]), o = i(() => u(!1), []), v = i((e) => {
    e ? (window.addEventListener(n.current ? "touchmove" : "mousemove", t), window.addEventListener(n.current ? "touchend" : "mouseup", o)) : (window.removeEventListener("mousemove", t), window.removeEventListener("mouseup", o), window.removeEventListener("touchmove", t), window.removeEventListener("touchend", o));
  }, [t, o]);
  k(() => (v(d), () => {
    v(!1);
  }), [d, t, o, v]);
  var w = i((e) => {
    var a = document.activeElement;
    a?.blur(), g(e.nativeEvent), C(e.nativeEvent) && r.current && (l?.(x(r.current, e.nativeEvent), e.nativeEvent), u(!0));
  }, [l]);
  return /* @__PURE__ */ y.jsx("div", E({}, f, {
    className: [b, D || ""].filter(Boolean).join(" "),
    style: E({}, f.style, {
      touchAction: "none"
    }),
    ref: r,
    tabIndex: 0,
    onMouseDown: w,
    onTouchStart: w
  }));
});
I.displayName = "Interactive";
export {
  q as clamp,
  I as default,
  x as getRelativePosition,
  c as isTouch,
  g as preventDefaultMove,
  p as useEventCallback
};
