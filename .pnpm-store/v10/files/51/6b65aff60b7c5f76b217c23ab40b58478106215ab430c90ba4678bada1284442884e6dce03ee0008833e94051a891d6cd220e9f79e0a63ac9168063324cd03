export declare let unsavedStylesCache: Record<string, Partial<FormValues>>;
export interface FormValues {
    elementType: string;
    availableSections: Record<string, boolean>;
    element?: HTMLElement;
    position: string;
    left: string;
    top: string;
    right: string;
    bottom: string;
    width: string;
    height: string;
    padding: string;
    paddingTop: string;
    paddingRight: string;
    paddingBottom: string;
    paddingLeft: string;
    margin: string;
    marginTop: string;
    marginRight: string;
    marginBottom: string;
    marginLeft: string;
    showAdvancedSpacing: boolean;
    rotation: number;
    opacity: number;
    cornerRadius: string;
    fontWeight: string;
    fontStyle: string;
    textDecoration: string;
    fontSize: string;
    lineHeight: string;
    letterSpacing: string;
    fontFamily: string;
    textAlign: string;
    text: string;
    href: string;
    backgroundColor: string;
    backgroundImage: string;
    backgroundSize: string;
    backgroundPosition: string;
    backgroundRepeat: string;
    imageSrc: string;
    imageAlt: string;
    color: string;
    colorOpacity: number;
    hover_backgroundColor: string;
    hover_color: string;
    hover_colorOpacity: number;
    hover_fontSize: string;
    hover_opacity: number;
    hover_cornerRadius: string;
    hover_padding: string;
    hover_paddingTop: string;
    hover_paddingRight: string;
    hover_paddingBottom: string;
    hover_paddingLeft: string;
    hover_margin: string;
    hover_marginTop: string;
    hover_marginRight: string;
    hover_marginBottom: string;
    hover_marginLeft: string;
    hover_width: string;
    hover_height: string;
    hover_lineHeight: string;
    hover_letterSpacing: string;
    hover_textAlign: string;
    active_backgroundColor?: string;
    active_color?: string;
    active_colorOpacity?: number;
    active_fontSize?: string;
    active_opacity?: number;
    active_cornerRadius?: string;
    active_padding?: string;
    active_paddingTop?: string;
    active_paddingRight?: string;
    active_paddingBottom?: string;
    active_paddingLeft?: string;
    active_margin?: string;
    active_marginTop?: string;
    active_marginRight?: string;
    active_marginBottom?: string;
    active_marginLeft?: string;
    active_width?: string;
    active_height?: string;
    active_lineHeight?: string;
    active_letterSpacing?: string;
    active_textAlign?: string;
    display?: string;
    flexDirection?: string;
    flexWrap?: string;
    alignItems?: string;
    justifyContent?: string;
    alignContent?: string;
    alignSelf?: string;
    order?: string;
    gap?: string;
    rowGap?: string;
    columnGap?: string;
    gridTemplateColumns?: string;
    gridTemplateRows?: string;
    gridColumn?: string;
    gridRow?: string;
    gridArea?: string;
    placeItems?: string;
    placeContent?: string;
    zIndex?: string;
    minWidth?: string;
    maxWidth?: string;
    minHeight?: string;
    maxHeight?: string;
    aspectRatio?: string;
    borderWidth?: string;
    borderStyle?: string;
    borderColor?: string;
    borderTopWidth?: string;
    borderRightWidth?: string;
    borderBottomWidth?: string;
    borderLeftWidth?: string;
    border?: string;
    borderTop?: string;
    borderRight?: string;
    borderBottom?: string;
    borderLeft?: string;
    borderTopLeftRadius?: string;
    borderTopRightRadius?: string;
    borderBottomRightRadius?: string;
    borderBottomLeftRadius?: string;
    outlineWidth?: string;
    outlineStyle?: string;
    outlineColor?: string;
    outlineOffset?: string;
    boxShadow?: string;
    overflow?: string;
    overflowX?: string;
    overflowY?: string;
    overflowWrap?: string;
    textOverflow?: string;
    whiteSpace?: string;
    scale?: string;
    translate?: string;
    skew?: string;
    transformOrigin?: string;
    transitionProperty?: string;
    transitionDuration?: string;
    transitionTimingFunction?: string;
    transitionDelay?: string;
    objectFit?: string;
    objectPosition?: string;
    cursor?: string;
    pointerEvents?: string;
    userSelect?: string;
    backgroundAttachment?: string;
    backgroundClip?: string;
    backgroundOrigin?: string;
    backgroundBlendMode?: string;
    textTransform?: string;
    textShadow?: string;
    verticalAlign?: string;
    hover_display?: string;
    hover_flexDirection?: string;
    hover_flexWrap?: string;
    hover_alignItems?: string;
    hover_justifyContent?: string;
    hover_alignContent?: string;
    hover_alignSelf?: string;
    hover_order?: string;
    hover_gap?: string;
    hover_rowGap?: string;
    hover_columnGap?: string;
    hover_gridTemplateColumns?: string;
    hover_gridTemplateRows?: string;
    hover_gridColumn?: string;
    hover_gridRow?: string;
    hover_gridArea?: string;
    hover_placeItems?: string;
    hover_placeContent?: string;
    hover_zIndex?: string;
    hover_minWidth?: string;
    hover_maxWidth?: string;
    hover_minHeight?: string;
    hover_maxHeight?: string;
    hover_aspectRatio?: string;
    hover_borderWidth?: string;
    hover_borderStyle?: string;
    hover_borderColor?: string;
    hover_borderTopWidth?: string;
    hover_borderRightWidth?: string;
    hover_borderBottomWidth?: string;
    hover_borderLeftWidth?: string;
    hover_border?: string;
    hover_borderTop?: string;
    hover_borderRight?: string;
    hover_borderBottom?: string;
    hover_borderLeft?: string;
    hover_borderTopLeftRadius?: string;
    hover_borderTopRightRadius?: string;
    hover_borderBottomRightRadius?: string;
    hover_borderBottomLeftRadius?: string;
    hover_outlineWidth?: string;
    hover_outlineStyle?: string;
    hover_outlineColor?: string;
    hover_outlineOffset?: string;
    hover_boxShadow?: string;
    hover_overflow?: string;
    hover_overflowX?: string;
    hover_overflowY?: string;
    hover_overflowWrap?: string;
    hover_textOverflow?: string;
    hover_whiteSpace?: string;
    hover_scale?: string;
    hover_translate?: string;
    hover_skew?: string;
    hover_transformOrigin?: string;
    hover_transitionProperty?: string;
    hover_transitionDuration?: string;
    hover_transitionTimingFunction?: string;
    hover_transitionDelay?: string;
    hover_objectFit?: string;
    hover_objectPosition?: string;
    hover_cursor?: string;
    hover_pointerEvents?: string;
    hover_userSelect?: string;
    hover_backgroundAttachment?: string;
    hover_backgroundClip?: string;
    hover_backgroundOrigin?: string;
    hover_backgroundBlendMode?: string;
    hover_textTransform?: string;
    hover_textShadow?: string;
    hover_verticalAlign?: string;
}
export declare function rgbToHex(rgb: string): string;
export declare function getNonHoverComputedStyle(target: HTMLElement): CSSStyleDeclaration;
export declare function getElementValues(target: HTMLElement): FormValues;
export declare function getTailwindHoverStyles(target: HTMLElement): Record<string, string>;
export declare function resolveTailwindColor(className: string): string | null;
export declare function getHoverStyles(target: HTMLElement): Record<string, string>;
export declare function getCSSHoverStyles(target: HTMLElement): Record<string, string>;
export declare function checkSelectorMatch(element: HTMLElement, selectorText: string, fpId: string | null): boolean;
export declare function extractHoverValues(target: HTMLElement): Pick<FormValues, "hover_backgroundColor" | "hover_color" | "hover_colorOpacity" | "hover_fontSize" | "hover_opacity" | "hover_cornerRadius" | "hover_padding" | "hover_paddingTop" | "hover_paddingRight" | "hover_paddingBottom" | "hover_paddingLeft" | "hover_margin" | "hover_marginTop" | "hover_marginRight" | "hover_marginBottom" | "hover_marginLeft" | "hover_width" | "hover_height" | "hover_lineHeight" | "hover_letterSpacing" | "hover_textAlign">;
export declare function applyStylesToTarget(target: HTMLElement | null, updates: Partial<FormValues> & {
    _isHoverState?: boolean;
    _baseProperty?: string;
    _pseudoState?: "hover" | "active" | null;
}, isCommitted?: boolean): void;
//# sourceMappingURL=elementStyles.d.ts.map