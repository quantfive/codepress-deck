import { j as e } from "./index7.js";
import { Anchor as h } from "./index61.js";
import { Popover as x, PopoverContent as u } from "./index57.js";
import { checkIsStaticDeployUrl as f, checkIsDeploying as y, deployStatusString as g, deployColor as v } from "./index60.js";
import { useDeployment as j } from "./index8.js";
import { detectRepositoryInfo as w } from "./index29.js";
import b from "./index40.js";
import { logger as N } from "./index12.js";
import D from "./index65.js";
import P from "./index66.js";
function U({ isEditing: m }) {
  const {
    showDeploymentPopover: r,
    setShowDeploymentPopover: o,
    deploymentPopover: t,
    branchName: a,
    viewingStaleVersion: p
  } = j();
  if (!t) {
    r && (b.captureMessage("Deployment popover with no deployment in context"), N.error("Deployment popover with no deployment in context"));
    return;
  }
  const l = w();
  let i = !1;
  try {
    i = f(new URL(t.preview_url), l?.repository, l?.branch);
  } catch {
  }
  const n = y(t.state), c = t.commit_date ? new Intl.DateTimeFormat(void 0, { dateStyle: "medium", timeStyle: "short" }).format(new Date(t.commit_date)) : "—", d = (s) => {
    o(s ? {} : null);
  };
  return /* @__PURE__ */ e.jsxs(
    x,
    {
      open: r && m,
      onOpenChange: d,
      children: [
        /* @__PURE__ */ e.jsx(
          h,
          {
            className: "fixed bottom-4 right-4 w-12 h-12",
            style: { pointerEvents: "none" }
          }
        ),
        /* @__PURE__ */ e.jsx(
          u,
          {
            side: "top",
            align: "end",
            className: "w-[480px] p-4",
            onInteractOutside: (s) => s.preventDefault(),
            onPointerDownOutside: (s) => s.preventDefault(),
            onFocusOutside: (s) => s.preventDefault(),
            children: /* @__PURE__ */ e.jsxs("div", { className: "space-y-3", children: [
              /* @__PURE__ */ e.jsxs("div", { className: "flex justify-between", children: [
                /* @__PURE__ */ e.jsxs("div", { className: "text-base font-semibold", children: [
                  g(t.state),
                  " ",
                  t.branch_name || a
                ] }),
                /* @__PURE__ */ e.jsx(
                  "button",
                  {
                    className: "p-0 m-0 bg-transparent border-none outline-none hover:bg-transparent focus:outline-none",
                    onClick: () => o(null),
                    children: /* @__PURE__ */ e.jsx(D, { className: "w-4 h-4" })
                  }
                )
              ] }),
              n && /* @__PURE__ */ e.jsx("p", { className: "text-sm text-gray-600", children: "CodePress is generating a shareable link with your updates — it might take 3–5 minutes." }),
              p && !n && /* @__PURE__ */ e.jsxs("p", { className: "text-sm text-gray-600", children: [
                "You seem to be on a stale version. ",
                i ? /* @__PURE__ */ e.jsx(e.Fragment, { children: "Please refresh the page to see the most recent deployed changes." }) : /* @__PURE__ */ e.jsx(e.Fragment, { children: "Please follow click the preview url to see the most recent deployed changes." })
              ] }),
              /* @__PURE__ */ e.jsxs("div", { className: "flex items-center justify-between rounded-md bg-gray-50 border px-3 py-2", children: [
                /* @__PURE__ */ e.jsxs("div", { className: "flex items-center gap-2", children: [
                  /* @__PURE__ */ e.jsx("span", { className: `inline-block h-2 w-2 rounded-full ${v(t.state)} ${n ? "animate-pulse scale-110 transition-transform" : ""}` }),
                  /* @__PURE__ */ e.jsx("span", { className: "text-sm font-medium", children: t.branch_name || a })
                ] }),
                /* @__PURE__ */ e.jsx("div", { className: "flex items-center gap-2", children: !!t.preview_url && /* @__PURE__ */ e.jsxs(
                  "a",
                  {
                    href: t.preview_url,
                    target: "_blank",
                    rel: "noreferrer",
                    className: "flex text-xs underline gap-2",
                    title: "Open preview",
                    children: [
                      t.preview_url,
                      /* @__PURE__ */ e.jsx(P, { className: "w-4 h-4 text-gray-500" })
                    ]
                  }
                ) })
              ] }),
              /* @__PURE__ */ e.jsxs("div", { className: "text-xs text-gray-500", children: [
                "Last saved ",
                c
              ] })
            ] })
          }
        )
      ]
    }
  );
}
export {
  U as DeploymentPopover
};
