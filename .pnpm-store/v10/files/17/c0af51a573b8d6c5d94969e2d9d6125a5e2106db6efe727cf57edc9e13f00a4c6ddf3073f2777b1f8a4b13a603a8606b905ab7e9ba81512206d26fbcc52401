import j from "./index258.js";
import p from "./index245.js";
import D from "./index247.js";
import W, { Fragment as b } from "react";
import { validHex as F, hexToHsva as k, hsvaToHex as S, color as _ } from "./index244.js";
import H from "./index259.js";
import N from "./index260.js";
import { j as i } from "./index7.js";
var A = ["prefixCls", "placement", "className", "style", "color", "colors", "showTriangle", "rectProps", "onChange", "rectRender"], O = ["#B80000", "#DB3E00", "#FCCB00", "#008B02", "#006B76", "#1273DE", "#004DCF", "#5300EB", "#EB9694", "#FAD0C3", "#FEF3BD", "#C1E1C5", "#BEDADC", "#C4DEF6", "#BED3F3", "#D4C4FB"], e = /* @__PURE__ */ function(a) {
  return a.Left = "L", a.LeftTop = "LT", a.LeftBottom = "LB", a.Right = "R", a.RightTop = "RT", a.RightBottom = "RB", a.Top = "T", a.TopRight = "TR", a.TopLeft = "TL", a.Bottom = "B", a.BottomLeft = "BL", a.BottomRight = "BR", a;
}({}), X = /* @__PURE__ */ W.forwardRef((a, x) => {
  var {
    prefixCls: c = "w-color-github",
    placement: t = e.TopRight,
    className: m,
    style: B,
    color: n,
    colors: v = O,
    showTriangle: R = !0,
    rectProps: u = {},
    onChange: d,
    rectRender: g
  } = a, T = D(a, A), C = typeof n == "string" && F(n) ? k(n) : n, L = n ? S(C) : "", w = (s) => d && d(_(s)), y = p({
    "--github-border": "1px solid rgba(0, 0, 0, 0.2)",
    "--github-background-color": "#fff",
    "--github-box-shadow": "rgb(0 0 0 / 15%) 0px 3px 12px",
    "--github-arrow-border-color": "rgba(0, 0, 0, 0.15)",
    width: 200,
    borderRadius: 4,
    background: "var(--github-background-color)",
    boxShadow: "var(--github-box-shadow)",
    border: "var(--github-border)",
    position: "relative",
    padding: 5
  }, B), f = {
    borderStyle: "solid",
    position: "absolute"
  }, r = p({}, f), o = p({}, f);
  /^T/.test(t) && (r.borderWidth = "0 8px 8px", r.borderColor = "transparent transparent var(--github-arrow-border-color)", o.borderWidth = "0 7px 7px", o.borderColor = "transparent transparent var(--github-background-color)"), t === e.TopRight && (r.top = -8, o.top = -7), t === e.Top && (r.top = -8, o.top = -7), t === e.TopLeft && (r.top = -8, o.top = -7), /^B/.test(t) && (r.borderWidth = "8px 8px 0", r.borderColor = "var(--github-arrow-border-color) transparent transparent", o.borderWidth = "7px 7px 0", o.borderColor = "var(--github-background-color) transparent transparent", t === e.BottomRight && (r.top = "100%", o.top = "100%"), t === e.Bottom && (r.top = "100%", o.top = "100%"), t === e.BottomLeft && (r.top = "100%", o.top = "100%")), /^(B|T)/.test(t) && ((t === e.Top || t === e.Bottom) && (r.left = "50%", r.marginLeft = -8, o.left = "50%", o.marginLeft = -7), (t === e.TopRight || t === e.BottomRight) && (r.right = 10, o.right = 11), (t === e.TopLeft || t === e.BottomLeft) && (r.left = 7, o.left = 8)), /^L/.test(t) && (r.borderWidth = "8px 8px 8px 0", r.borderColor = "transparent var(--github-arrow-border-color) transparent transparent", o.borderWidth = "7px 7px 7px 0", o.borderColor = "transparent var(--github-background-color) transparent transparent", r.left = -8, o.left = -7), /^R/.test(t) && (r.borderWidth = "8px 0 8px 8px", r.borderColor = "transparent transparent transparent var(--github-arrow-border-color)", o.borderWidth = "7px 0 7px 7px", o.borderColor = "transparent transparent transparent var(--github-background-color)", r.right = -8, o.right = -7), /^(L|R)/.test(t) && ((t === e.RightTop || t === e.LeftTop) && (r.top = 5, o.top = 6), (t === e.Left || t === e.Right) && (r.top = "50%", o.top = "50%", r.marginTop = -8, o.marginTop = -7), (t === e.LeftBottom || t === e.RightBottom) && (r.top = "100%", o.top = "100%", r.marginTop = -21, o.marginTop = -20));
  var E = (s) => {
    var l = p({}, (j(s), s)), h = g && g(p({}, l));
    return h || /* @__PURE__ */ i.jsx(N, p({}, l, {
      rectProps: u
    }));
  };
  return /* @__PURE__ */ i.jsx(H, p({
    ref: x,
    className: [c, m].filter(Boolean).join(" "),
    colors: v,
    color: L,
    rectRender: E
  }, T, {
    onChange: w,
    style: y,
    rectProps: {
      style: {
        marginRight: 0,
        marginBottom: 0,
        borderRadius: 0,
        height: 25,
        width: 25
      }
    },
    addonBefore: /* @__PURE__ */ i.jsx(b, {
      children: R && /* @__PURE__ */ i.jsxs(b, {
        children: [/* @__PURE__ */ i.jsx("div", {
          style: r
        }), /* @__PURE__ */ i.jsx("div", {
          style: o
        })]
      })
    })
  }));
});
X.displayName = "Github";
export {
  e as GithubPlacement,
  X as default
};
