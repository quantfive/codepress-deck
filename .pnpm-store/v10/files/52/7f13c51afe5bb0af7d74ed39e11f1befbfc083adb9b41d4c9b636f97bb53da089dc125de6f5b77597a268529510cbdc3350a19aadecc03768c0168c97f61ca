import { exceptionFromError as c } from "./index122.js";
import { defineIntegration as E } from "./index144.js";
import { applyAggregateErrorsToEvent as m } from "./index158.js";
const p = "cause", a = 5, g = "LinkedErrors", I = (r = {}) => {
  const o = r.limit || a, t = r.key || p;
  return {
    name: g,
    preprocessEvent(e, n, s) {
      const i = s.getOptions();
      m(
        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function
        c,
        i.stackParser,
        t,
        o,
        e,
        n
      );
    }
  };
}, A = E(I);
export {
  A as linkedErrorsIntegration
};
