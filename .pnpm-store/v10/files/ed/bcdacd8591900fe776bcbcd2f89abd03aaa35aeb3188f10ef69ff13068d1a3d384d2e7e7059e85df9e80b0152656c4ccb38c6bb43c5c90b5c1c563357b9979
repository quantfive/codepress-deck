import { isString as h } from "./index132.js";
import { GLOBAL_OBJ as g } from "./index117.js";
const u = g, E = 80;
function y(a, e = {}) {
  if (!a)
    return "<unknown>";
  try {
    let t = a;
    const r = 5, o = [];
    let i = 0, n = 0;
    const s = " > ", c = s.length;
    let l;
    const f = Array.isArray(e) ? e : e.keyAttrs, m = !Array.isArray(e) && e.maxStringLength || E;
    for (; t && i++ < r && (l = p(t, f), !(l === "html" || i > 1 && n + o.length * c + l.length >= m)); )
      o.push(l), n += l.length, t = t.parentNode;
    return o.reverse().join(s);
  } catch {
    return "<unknown>";
  }
}
function p(a, e) {
  const t = a, r = [];
  if (!t?.tagName)
    return "";
  if (u.HTMLElement && t instanceof HTMLElement && t.dataset) {
    if (t.dataset.sentryComponent)
      return t.dataset.sentryComponent;
    if (t.dataset.sentryElement)
      return t.dataset.sentryElement;
  }
  r.push(t.tagName.toLowerCase());
  const o = e?.length ? e.filter((n) => t.getAttribute(n)).map((n) => [n, t.getAttribute(n)]) : null;
  if (o?.length)
    o.forEach((n) => {
      r.push(`[${n[0]}="${n[1]}"]`);
    });
  else {
    t.id && r.push(`#${t.id}`);
    const n = t.className;
    if (n && h(n)) {
      const s = n.split(/\s+/);
      for (const c of s)
        r.push(`.${c}`);
    }
  }
  const i = ["aria-label", "type", "name", "title", "alt"];
  for (const n of i) {
    const s = t.getAttribute(n);
    s && r.push(`[${n}="${s}"]`);
  }
  return r.join("");
}
function L() {
  try {
    return u.document.location.href;
  } catch {
    return "";
  }
}
function T(a) {
  if (!u.HTMLElement)
    return null;
  let e = a;
  const t = 5;
  for (let r = 0; r < t; r++) {
    if (!e)
      return null;
    if (e instanceof HTMLElement) {
      if (e.dataset.sentryComponent)
        return e.dataset.sentryComponent;
      if (e.dataset.sentryElement)
        return e.dataset.sentryElement;
    }
    e = e.parentNode;
  }
  return null;
}
export {
  T as getComponentName,
  L as getLocationHref,
  y as htmlTreeAsString
};
