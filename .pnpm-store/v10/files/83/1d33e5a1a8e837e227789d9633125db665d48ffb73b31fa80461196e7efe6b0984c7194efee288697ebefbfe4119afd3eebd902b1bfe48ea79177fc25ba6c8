import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faSpinnerThird } from "@fortawesome/pro-light-svg-icons";
// Add CSS keyframes for the fadeIn animation if not already global
const fadeInKeyframes = `
@keyframes fadeInPopover {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
`;
// Add the keyframes to the document head
if (typeof document !== "undefined") {
    const styleId = "codepress-popover-fadein";
    if (!document.getElementById(styleId)) {
        const style = document.createElement("style");
        style.id = styleId;
        style.textContent = fadeInKeyframes;
        document.head.appendChild(style);
    }
}
const Spinner = () => (_jsx(FontAwesomeIcon, { icon: faSpinnerThird, className: "fa-spin", style: { fontSize: "12px" } }));
export const ActionBarPopover = ({ isLoading, onSave, onCancel, position, }) => {
    // Prevent clicks inside the popover from triggering outside click listeners
    const handleClick = (e) => {
        e.stopPropagation();
    };
    return (_jsx("div", { style: {
            position: "absolute",
            top: `${position.y}px`,
            left: `${position.x}px`,
            zIndex: 10001, // Ensure it's above most content
            filter: "drop-shadow(0 2px 5px rgba(0, 0, 0, 0.1))",
        }, onClick: handleClick, "data-highlighter": "ignore" // Keep ignoring for highlighter if needed elsewhere
        , children: _jsxs("div", { style: {
                display: "flex",
                gap: "8px",
                padding: "8px",
                backgroundColor: "white",
                borderRadius: "6px",
                boxShadow: "0 4px 12px rgba(0, 0, 0, 0.15)",
                border: "1px solid #e2e8f0",
                animation: "fadeInPopover 0.2s ease-in-out",
            }, "data-cpt-id": "inline-edit-actions" // Keep ID for potential targeting
            , "data-highlighter": "ignore", children: [_jsx("button", { onClick: (e) => {
                        e.preventDefault(); // Prevent default button behavior
                        onCancel();
                    }, style: {
                        padding: "4px 8px",
                        fontSize: "12px",
                        backgroundColor: "#e2e8f0",
                        color: "#1f2937",
                        border: "none",
                        borderRadius: "4px",
                        cursor: "pointer",
                        transition: "background-color 0.15s ease",
                    }, type: "button", disabled: isLoading, onMouseOver: (e) => {
                        e.currentTarget.style.backgroundColor = "#cbd5e1";
                    }, onMouseOut: (e) => {
                        e.currentTarget.style.backgroundColor = "#e2e8f0";
                    }, tabIndex: 0, "data-cpt-id": "inline-edit-actions", children: "Cancel" }), _jsx("button", { "data-cpt-id": "inline-edit-actions", type: "button", onClick: (e) => {
                        e.preventDefault(); // Prevent default button behavior
                        onSave();
                    }, disabled: isLoading, style: {
                        padding: "4px 8px",
                        fontSize: "12px",
                        backgroundColor: "#3b82f6",
                        color: "white",
                        border: "none",
                        borderRadius: "4px",
                        cursor: "pointer",
                        transition: "background-color 0.15s ease",
                        minWidth: "50px", // Prevent size change when showing spinner
                        textAlign: "center",
                    }, onMouseOver: (e) => {
                        e.currentTarget.style.backgroundColor = "#2563eb";
                    }, onMouseOut: (e) => {
                        e.currentTarget.style.backgroundColor = "#3b82f6";
                    }, tabIndex: 1, children: isLoading ? _jsx(Spinner, {}) : "Save" })] }) }));
};
