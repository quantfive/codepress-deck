import { clsx as m } from "./index72.js";
import { twMerge as p } from "./index73.js";
import { logger as b } from "./index12.js";
import "./index40.js";
function w() {
  return typeof chrome < "u" && chrome.runtime && typeof chrome.runtime.id == "string" ? chrome : typeof browser < "u" && browser.runtime && typeof browser.runtime.id == "string" ? browser : null;
}
function A(...e) {
  return p(m(e));
}
const N = () => {
  const e = [
    document.documentElement,
    // html
    document.body,
    document.head
  ];
  for (const t of e) {
    if (!t) continue;
    const i = t.getAttribute("codepress-github-repo-name"), u = t.getAttribute("codepress-github-branch");
    if (i)
      return {
        repository: i,
        branch: u || "main"
      };
  }
  const r = document.querySelectorAll("[codepress-github-repo-name]");
  if (r.length === 0)
    return b.debug("CodePress: No repository information found in document"), null;
  const o = r[0], s = o.getAttribute("codepress-github-repo-name"), c = o.getAttribute("codepress-github-branch"), n = s;
  return n ? {
    repository: n,
    branch: c || "main"
  } : null;
}, x = (e) => {
  if (!e) return null;
  const r = e.split("/");
  return r.length !== 2 ? null : {
    owner: r[0],
    repo: r[1]
  };
};
export {
  A as cn,
  N as detectRepositoryInfo,
  w as getBrowserAPI,
  x as parseRepositoryName
};
