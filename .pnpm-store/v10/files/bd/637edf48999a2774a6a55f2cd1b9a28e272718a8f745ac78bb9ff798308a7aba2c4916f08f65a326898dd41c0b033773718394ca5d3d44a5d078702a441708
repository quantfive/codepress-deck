import { getGlobalSingleton as l } from "./index202.js";
import { DEBUG_BUILD as f } from "./index208.js";
import { GLOBAL_OBJ as r } from "./index117.js";
const _ = [
  "debug",
  "info",
  "warn",
  "error",
  "log",
  "assert",
  "trace"
], d = "Sentry Logger ", a = {};
function b(n) {
  if (!("console" in r))
    return n();
  const e = r.console, s = {}, c = Object.keys(a);
  c.forEach((o) => {
    const u = a[o];
    s[o] = e[o], e[o] = u;
  });
  try {
    return n();
  } finally {
    c.forEach((o) => {
      e[o] = s[o];
    });
  }
}
function L() {
  i().enabled = !0;
}
function p() {
  i().enabled = !1;
}
function g() {
  return i().enabled;
}
function E(...n) {
  t("log", ...n);
}
function m(...n) {
  t("warn", ...n);
}
function S(...n) {
  t("error", ...n);
}
function t(n, ...e) {
  f && g() && b(() => {
    r.console[n](`${d}[${n}]:`, ...e);
  });
}
function i() {
  return f ? l("loggerSettings", () => ({ enabled: !1 })) : { enabled: !1 };
}
const h = {
  /** Enable logging. */
  enable: L,
  /** Disable logging. */
  disable: p,
  /** Check if logging is enabled. */
  isEnabled: g,
  /** Log a message. */
  log: E,
  /** Log a warning. */
  warn: m,
  /** Log an error. */
  error: S
};
export {
  _ as CONSOLE_LEVELS,
  b as consoleSandbox,
  h as debug,
  a as originalConsoleMethods
};
