import { getAsyncContextStrategy as c } from "./index201.js";
import { getMainCarrier as a, getGlobalSingleton as p } from "./index202.js";
import { Scope as g } from "./index96.js";
import { generateSpanId as s } from "./index203.js";
function S() {
  const t = a();
  return c(t).getCurrentScope();
}
function m() {
  const t = a();
  return c(t).getIsolationScope();
}
function d() {
  return p("globalScope", () => new g());
}
function x(...t) {
  const e = a(), n = c(e);
  if (t.length === 2) {
    const [o, r] = t;
    return o ? n.withSetScope(o, r) : n.withScope(r);
  }
  return n.withScope(t[0]);
}
function I() {
  return S().getClient();
}
function h(t) {
  const e = t.getPropagationContext(), { traceId: n, parentSpanId: o, propagationSpanId: r } = e, i = {
    trace_id: n,
    span_id: r || s()
  };
  return o && (i.parent_span_id = o), i;
}
export {
  I as getClient,
  S as getCurrentScope,
  d as getGlobalScope,
  m as getIsolationScope,
  h as getTraceContextFromScope,
  x as withScope
};
