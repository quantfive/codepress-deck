import { j as o } from "./index7.js";
import { useState as v, useEffect as J } from "react";
import { Input as b } from "./index51.js";
import { InputWithPopover as k } from "./index226.js";
import { InputWithUnitSelect as W } from "./index227.js";
import { Label as x } from "./index52.js";
import { Popover as C, PopoverTrigger as w, PopoverContent as $ } from "./index57.js";
import { useVisualEditor as Q } from "./index6.js";
import R from "./index228.js";
import { logger as S } from "./index12.js";
import X from "./index170.js";
import Y from "./index169.js";
import Z from "./index168.js";
import ee from "./index177.js";
const te = () => /* @__PURE__ */ o.jsx("div", { className: "w-px h-6 bg-slate-300" }), z = (h) => {
  if (h === "") return "";
  const p = h.trim();
  return /[^0-9.-]/.test(p.slice(-1)) ? p : `${p}px`;
}, fe = ({
  popoverContainer: h
}) => {
  const {
    activeElementFpId: p,
    trackedElements: T,
    updateActiveElementStyle: O,
    editingState: N
  } = Q(), B = p ? T[p]?.element : null, j = p ? T[p]?.currentValues : null, [d, l] = v({
    width: "",
    height: "",
    minWidth: "",
    maxWidth: "",
    minHeight: "",
    maxHeight: "",
    padding: "",
    paddingTop: "",
    paddingRight: "",
    paddingBottom: "",
    paddingLeft: "",
    margin: "",
    marginTop: "",
    marginRight: "",
    marginBottom: "",
    marginLeft: "",
    border: "",
    cornerRadius: "",
    borderTop: "",
    borderRight: "",
    borderBottom: "",
    borderLeft: "",
    borderTopLeftRadius: "",
    borderTopRightRadius: "",
    borderBottomRightRadius: "",
    borderBottomLeftRadius: "",
    backgroundColor: "",
    backgroundImage: "",
    backgroundSize: "cover",
    backgroundPosition: "center",
    backgroundRepeat: "no-repeat"
  }), [V, F] = v(!1), [H, I] = v(!1), [M, A] = v(!1), [K, U] = v(!1);
  if (J(() => {
    if (!j) return;
    const e = (n) => {
      if (N === "normal")
        return j[n] ?? "";
      const t = `${N}_${n}`;
      return j[t] ?? j[n] ?? "";
    };
    S.debug("initialValues (resolved)", { initialValues: j, editingState: N });
    const a = (n) => {
      const t = n.trim().split(/\s+/);
      switch (t.length) {
        case 1:
          return [t[0], t[0], t[0], t[0]];
        case 2:
          return [t[0], t[1], t[0], t[1]];
        case 3:
          return [t[0], t[1], t[2], t[1]];
        case 4:
          return [t[0], t[1], t[2], t[3]];
        default:
          return [n, n, n, n];
      }
    }, s = {
      width: e("width"),
      height: e("height"),
      minWidth: e("minWidth"),
      maxWidth: e("maxWidth"),
      minHeight: e("minHeight"),
      maxHeight: e("maxHeight"),
      padding: e("padding"),
      paddingTop: e("paddingTop"),
      paddingRight: e("paddingRight"),
      paddingBottom: e("paddingBottom"),
      paddingLeft: e("paddingLeft"),
      margin: e("margin"),
      marginTop: e("marginTop"),
      marginRight: e("marginRight"),
      marginBottom: e("marginBottom"),
      marginLeft: e("marginLeft"),
      border: e("border"),
      cornerRadius: e("cornerRadius"),
      borderTop: e("borderTop"),
      borderRight: e("borderRight"),
      borderBottom: e("borderBottom"),
      borderLeft: e("borderLeft"),
      borderTopLeftRadius: e("borderTopLeftRadius"),
      borderTopRightRadius: e("borderTopRightRadius"),
      borderBottomRightRadius: e("borderBottomRightRadius"),
      borderBottomLeftRadius: e("borderBottomLeftRadius"),
      backgroundColor: e("backgroundColor"),
      backgroundImage: e("backgroundImage"),
      backgroundSize: e("backgroundSize") || "cover",
      backgroundPosition: e("backgroundPosition") || "center",
      backgroundRepeat: e("backgroundRepeat") || "no-repeat"
    };
    [
      { base: "padding", top: "paddingTop", right: "paddingRight", bottom: "paddingBottom", left: "paddingLeft" },
      { base: "margin", top: "marginTop", right: "marginRight", bottom: "marginBottom", left: "marginLeft" }
    ].forEach(({ base: n, top: t, right: r, bottom: i, left: c }) => {
      const g = s[n];
      if (g) {
        const [f, u, L, _] = a(g);
        s[t] || (s[t] = f), s[r] || (s[r] = u), s[i] || (s[i] = L), s[c] || (s[c] = _);
      }
    }), l(s);
  }, [j, N]), !B)
    return null;
  const m = (e) => {
    const a = { ...e }, s = (t) => {
      const r = t.trim().split(/\s+/);
      switch (r.length) {
        case 1:
          return [r[0], r[0], r[0], r[0]];
        case 2:
          return [r[0], r[1], r[0], r[1]];
        case 3:
          return [r[0], r[1], r[2], r[1]];
        case 4:
          return [r[0], r[1], r[2], r[3]];
        default:
          return [t, t, t, t];
      }
    };
    Object.entries(e).forEach(([t, r]) => {
      if ((t === "padding" || t === "margin") && typeof r == "string") {
        const [i, c, g, f] = s(r);
        ["Top", "Right", "Bottom", "Left"].forEach((u, L) => {
          a[`${t}${u}`] = [i, c, g, f][L];
        });
      } else t === "border" && ["Top", "Right", "Bottom", "Left"].forEach((i) => {
        a[`${t}${i}`] = r;
      });
    });
    const n = (t) => {
      const r = {
        Top: a[`${t}Top`] ?? d[`${t}Top`],
        Right: a[`${t}Right`] ?? d[`${t}Right`],
        Bottom: a[`${t}Bottom`] ?? d[`${t}Bottom`],
        Left: a[`${t}Left`] ?? d[`${t}Left`]
      }, { Top: i, Right: c, Bottom: g, Left: f } = r;
      let u = "";
      i === c && i === g && i === f ? u = i : i === g && c === f ? u = `${i} ${c}` : c === f ? u = `${i} ${c} ${g}` : u = `${i} ${c} ${g} ${f}`, a[t] = u;
    };
    ["paddingTop", "paddingRight", "paddingBottom", "paddingLeft"].some((t) => t in e) && n("padding"), ["marginTop", "marginRight", "marginBottom", "marginLeft"].some((t) => t in e) && n("margin"), l((t) => ({ ...t, ...a })), O(a), Object.entries(a).forEach(([t, r]) => {
      if (B) {
        if (t === "cornerRadius") {
          B.style.borderRadius = r;
          return;
        }
        B.style[t] = r;
      }
    });
  }, P = (e) => {
    const a = e === "width" ? "minWidth" : "minHeight", s = e === "width" ? "maxWidth" : "maxHeight", n = [
      "100%",
      "max-content",
      "min-content",
      "fit-content",
      "auto",
      "stretch"
    ];
    return /* @__PURE__ */ o.jsxs("div", { className: "space-y-3", children: [
      /* @__PURE__ */ o.jsxs("div", { children: [
        /* @__PURE__ */ o.jsxs("h4", { className: "text-sm font-medium mb-2 capitalize", children: [
          e,
          " constraints"
        ] }),
        /* @__PURE__ */ o.jsxs("div", { className: "grid grid-cols-2 gap-2", children: [
          /* @__PURE__ */ o.jsxs("div", { className: "flex flex-col space-y-1", children: [
            /* @__PURE__ */ o.jsx(x, { htmlFor: `${e}-min`, className: "text-sm", children: "Min" }),
            /* @__PURE__ */ o.jsx(
              b,
              {
                id: `${e}-min`,
                value: d[a],
                onChange: (t) => l((r) => ({ ...r, [a]: t.target.value })),
                defaultUnit: "px",
                onCommit: (t) => m({ [a]: t })
              }
            )
          ] }),
          /* @__PURE__ */ o.jsxs("div", { className: "flex flex-col space-y-1", children: [
            /* @__PURE__ */ o.jsx(x, { htmlFor: `${e}-max`, className: "text-sm", children: "Max" }),
            /* @__PURE__ */ o.jsx(
              b,
              {
                id: `${e}-max`,
                value: d[s],
                onChange: (t) => l((r) => ({ ...r, [s]: t.target.value })),
                defaultUnit: "px",
                onCommit: (t) => m({ [s]: t })
              }
            )
          ] })
        ] })
      ] }),
      /* @__PURE__ */ o.jsxs("div", { children: [
        /* @__PURE__ */ o.jsx("h4", { className: "text-sm font-medium mb-2", children: "Presets" }),
        /* @__PURE__ */ o.jsx("div", { className: "grid grid-cols-3 gap-2", children: n.map((t) => /* @__PURE__ */ o.jsx(
          R,
          {
            className: "text-xs font-normal px-1 py-1 border border-solid border-slate-300 rounded",
            isActive: d[e] === t,
            onClick: () => {
              const r = d[e];
              if (S.debug("currentVal", r), S.debug("preset", t), r === t) {
                const i = T[p]?.originalValues?.[e] ?? "";
                l((c) => ({
                  ...c,
                  [e]: i
                })), m({ [e]: i });
              } else
                l((i) => ({ ...i, [e]: t })), m({ [e]: t });
            },
            children: t
          },
          t
        )) })
      ] })
    ] });
  }, E = (e) => {
    const a = e, s = e, n = [
      [`${a}Top`, "Top"],
      [`${a}Right`, "Right"],
      [`${a}Bottom`, "Bottom"],
      [`${a}Left`, "Left"]
    ];
    return /* @__PURE__ */ o.jsxs("div", { children: [
      /* @__PURE__ */ o.jsx("h4", { className: "font-medium capitalize mb-2", children: e }),
      /* @__PURE__ */ o.jsxs("div", { className: "space-y-2 mb-3", children: [
        /* @__PURE__ */ o.jsx(x, { htmlFor: `${e}-all`, className: "text-sm", children: "All sides" }),
        /* @__PURE__ */ o.jsx(
          W,
          {
            id: `${e}-all`,
            className: "w-full",
            value: d[s],
            container: h,
            onChange: (t) => {
              const r = t.target.value;
              l((i) => ({ ...i, [s]: r })), m({ [s]: r });
            }
          }
        )
      ] }),
      /* @__PURE__ */ o.jsx("div", { className: "grid grid-cols-2 gap-2", children: n.map(([t, r]) => /* @__PURE__ */ o.jsxs("div", { className: "flex flex-col space-y-1", children: [
        /* @__PURE__ */ o.jsx(x, { htmlFor: `${t}`, className: "text-sm", children: r }),
        /* @__PURE__ */ o.jsx(
          W,
          {
            id: `${t}`,
            className: "w-full",
            value: d[t],
            container: h,
            onChange: (i) => {
              const c = i.target.value;
              l((g) => ({ ...g, [t]: c })), m({ [t]: c });
            }
          }
        )
      ] }, t)) })
    ] });
  }, q = () => /* @__PURE__ */ o.jsxs(C, { open: M, onOpenChange: A, children: [
    /* @__PURE__ */ o.jsx(w, { asChild: !0, children: /* @__PURE__ */ o.jsx(
      R,
      {
        icon: X,
        className: "p-2 rounded-md hover:bg-slate-100",
        tooltip: "Padding"
      }
    ) }),
    /* @__PURE__ */ o.jsx(
      $,
      {
        container: h,
        className: "w-72 p-3 bg-white rounded-lg shadow-lg border-slate-200 z-[9999999999]",
        sideOffset: 16,
        children: E("padding")
      }
    )
  ] }), y = () => /* @__PURE__ */ o.jsxs(C, { open: K, onOpenChange: U, children: [
    /* @__PURE__ */ o.jsx(w, { asChild: !0, children: /* @__PURE__ */ o.jsx(
      R,
      {
        icon: Y,
        className: "p-2 rounded-md hover:bg-slate-100",
        tooltip: "Margin"
      }
    ) }),
    /* @__PURE__ */ o.jsx(
      $,
      {
        container: h,
        className: "w-72 p-3 bg-white rounded-lg shadow-lg border-slate-200 z-[9999999999]",
        sideOffset: 16,
        children: E("margin")
      }
    )
  ] }), D = () => /* @__PURE__ */ o.jsxs(C, { open: V, onOpenChange: F, children: [
    /* @__PURE__ */ o.jsx(w, { asChild: !0, children: /* @__PURE__ */ o.jsx(
      R,
      {
        icon: Z,
        className: "p-2 rounded-md hover:bg-slate-100",
        tooltip: "Border"
      }
    ) }),
    /* @__PURE__ */ o.jsxs(
      $,
      {
        container: h,
        className: "w-80 p-3 bg-white rounded-lg shadow-lg border-slate-200 z-[9999999999]",
        sideOffset: 16,
        children: [
          /* @__PURE__ */ o.jsx("h4", { className: "font-medium mb-2", children: "Border" }),
          /* @__PURE__ */ o.jsxs("div", { className: "space-y-4", children: [
            /* @__PURE__ */ o.jsxs("div", { className: "flex flex-col space-y-1", children: [
              /* @__PURE__ */ o.jsx(x, { htmlFor: "border-all", className: "text-sm", children: "All sides" }),
              /* @__PURE__ */ o.jsx(
                b,
                {
                  id: "border-all",
                  value: d.border,
                  placeholder: "1px solid #000",
                  onChange: (e) => l((a) => ({ ...a, border: e.target.value })),
                  onCommit: (e) => m({ border: e })
                }
              )
            ] }),
            /* @__PURE__ */ o.jsx("div", { className: "grid grid-cols-2 gap-2", children: [
              ["borderTop", "Top"],
              ["borderRight", "Right"],
              ["borderBottom", "Bottom"],
              ["borderLeft", "Left"]
            ].map(([e, a]) => /* @__PURE__ */ o.jsxs("div", { className: "flex flex-col space-y-1", children: [
              /* @__PURE__ */ o.jsx(x, { htmlFor: e, className: "text-sm", children: a }),
              /* @__PURE__ */ o.jsx(
                b,
                {
                  id: e,
                  value: d[e],
                  placeholder: "1px solid #000",
                  onChange: (s) => l((n) => ({ ...n, [e]: s.target.value })),
                  onCommit: (s) => m({ [e]: s })
                }
              )
            ] }, e)) }),
            /* @__PURE__ */ o.jsxs("div", { className: "space-y-2 pt-2 border-t border-slate-200", children: [
              /* @__PURE__ */ o.jsx("h4", { className: "font-medium", children: "Radius" }),
              /* @__PURE__ */ o.jsxs("div", { className: "flex flex-col space-y-1", children: [
                /* @__PURE__ */ o.jsx(x, { htmlFor: "radius-all", className: "text-sm", children: "All corners" }),
                /* @__PURE__ */ o.jsx(
                  b,
                  {
                    id: "radius-all",
                    value: d.cornerRadius,
                    placeholder: "4px",
                    onChange: (e) => l((a) => ({
                      ...a,
                      cornerRadius: e.target.value
                    })),
                    onCommit: (e) => m({ cornerRadius: z(e) })
                  }
                )
              ] }),
              /* @__PURE__ */ o.jsx("div", { className: "grid grid-cols-2 gap-2", children: [
                ["borderTopLeftRadius", "Top-left"],
                ["borderTopRightRadius", "Top-right"],
                ["borderBottomRightRadius", "Bottom-right"],
                ["borderBottomLeftRadius", "Bottom-left"]
              ].map(([e, a]) => /* @__PURE__ */ o.jsxs("div", { className: "flex flex-col space-y-1", children: [
                /* @__PURE__ */ o.jsx(x, { htmlFor: e, className: "text-sm", children: a }),
                /* @__PURE__ */ o.jsx(
                  b,
                  {
                    id: e,
                    value: d[e],
                    onChange: (s) => l((n) => ({ ...n, [e]: s.target.value })),
                    onCommit: (s) => m({ [e]: z(s) })
                  }
                )
              ] }, e)) })
            ] })
          ] })
        ]
      }
    )
  ] }), G = () => /* @__PURE__ */ o.jsxs(C, { open: H, onOpenChange: I, children: [
    /* @__PURE__ */ o.jsx(w, { asChild: !0, children: /* @__PURE__ */ o.jsx(
      R,
      {
        icon: ee,
        className: "p-2 rounded-md hover:bg-slate-100",
        tooltip: "Background"
      }
    ) }),
    /* @__PURE__ */ o.jsxs(
      $,
      {
        container: h,
        className: "w-72 p-3 bg-white rounded-lg shadow-lg border-slate-200 z-[9999999999]",
        sideOffset: 16,
        children: [
          /* @__PURE__ */ o.jsx("h4", { className: "font-medium mb-2", children: "Background Color" }),
          /* @__PURE__ */ o.jsxs("div", { className: "flex items-center space-x-2", children: [
            /* @__PURE__ */ o.jsx(
              "input",
              {
                id: "bg-color-picker",
                type: "color",
                className: "w-10 h-10 p-0 border-none",
                value: d.backgroundColor || "#ffffff",
                onChange: (e) => {
                  const a = e.target.value;
                  l((s) => ({ ...s, backgroundColor: a })), m({ backgroundColor: a });
                }
              }
            ),
            /* @__PURE__ */ o.jsx(
              b,
              {
                id: "bg-color-text",
                placeholder: "#ffffff",
                value: d.backgroundColor,
                onChange: (e) => l((a) => ({
                  ...a,
                  backgroundColor: e.target.value
                })),
                onCommit: (e) => m({ backgroundColor: e })
              }
            )
          ] })
        ]
      }
    )
  ] });
  return /* @__PURE__ */ o.jsxs("div", { className: "flex items-center space-x-2", children: [
    /* @__PURE__ */ o.jsx(
      k,
      {
        id: "width-input",
        className: "w-[120px] h-8",
        value: d.width,
        defaultUnit: "px",
        onChange: (e) => l((a) => ({ ...a, width: e.target.value })),
        onCommit: (e) => m({ width: e }),
        startEnhancer: /* @__PURE__ */ o.jsx("span", { className: "text-slate-600", children: "W" }),
        popoverContent: P("width")
      }
    ),
    /* @__PURE__ */ o.jsx(
      k,
      {
        id: "height-input",
        className: "w-[120px] h-8",
        value: d.height,
        defaultUnit: "px",
        onChange: (e) => l((a) => ({ ...a, height: e.target.value })),
        onCommit: (e) => m({ height: e }),
        startEnhancer: /* @__PURE__ */ o.jsx("span", { className: "text-slate-600", children: "H" }),
        popoverContent: P("height")
      }
    ),
    /* @__PURE__ */ o.jsx(te, {}),
    q(),
    y(),
    D(),
    G()
  ] });
};
export {
  fe as default
};
