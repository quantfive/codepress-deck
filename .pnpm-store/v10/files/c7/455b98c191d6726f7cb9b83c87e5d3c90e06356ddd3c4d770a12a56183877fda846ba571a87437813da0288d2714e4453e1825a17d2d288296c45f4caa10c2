import * as c from "react";
import { composeEventHandlers as P } from "./index97.js";
import { useComposedRefs as A } from "./index98.js";
import { createContextScope as L } from "./index99.js";
import { DismissableLayer as G } from "./index100.js";
import { useFocusGuards as H } from "./index101.js";
import { FocusScope as K } from "./index102.js";
import { useId as $ } from "./index103.js";
import { createPopperScope as O, Content as U, Root as V, Anchor as _, Arrow as W } from "./index104.js";
import { Portal as Z } from "./index105.js";
import { Presence as E } from "./index106.js";
import { Primitive as w } from "./index107.js";
import { createSlot as q } from "./index108.js";
import { useControllableState as z } from "./index109.js";
import { hideOthers as B } from "./index110.js";
import J from "./index111.js";
import { j as p } from "./index7.js";
var C = "Popover", [j] = L(C, [
  O
]), m = O(), [Q, u] = j(C), b = (o) => {
  const {
    __scopePopover: n,
    children: t,
    open: s,
    defaultOpen: e,
    onOpenChange: r,
    modal: a = !1
  } = o, i = m(n), d = c.useRef(null), [v, g] = c.useState(!1), [h, l] = z({
    prop: s,
    defaultProp: e ?? !1,
    onChange: r,
    caller: C
  });
  return /* @__PURE__ */ p.jsx(V, { ...i, children: /* @__PURE__ */ p.jsx(
    Q,
    {
      scope: n,
      contentId: $(),
      triggerRef: d,
      open: h,
      onOpenChange: l,
      onOpenToggle: c.useCallback(() => l((x) => !x), [l]),
      hasCustomAnchor: v,
      onCustomAnchorAdd: c.useCallback(() => g(!0), []),
      onCustomAnchorRemove: c.useCallback(() => g(!1), []),
      modal: a,
      children: t
    }
  ) });
};
b.displayName = C;
var F = "PopoverAnchor", N = c.forwardRef(
  (o, n) => {
    const { __scopePopover: t, ...s } = o, e = u(F, t), r = m(t), { onCustomAnchorAdd: a, onCustomAnchorRemove: i } = e;
    return c.useEffect(() => (a(), () => i()), [a, i]), /* @__PURE__ */ p.jsx(_, { ...r, ...s, ref: n });
  }
);
N.displayName = F;
var S = "PopoverTrigger", y = c.forwardRef(
  (o, n) => {
    const { __scopePopover: t, ...s } = o, e = u(S, t), r = m(t), a = A(n, e.triggerRef), i = /* @__PURE__ */ p.jsx(
      w.button,
      {
        type: "button",
        "aria-haspopup": "dialog",
        "aria-expanded": e.open,
        "aria-controls": e.contentId,
        "data-state": T(e.open),
        ...s,
        ref: a,
        onClick: P(o.onClick, e.onOpenToggle)
      }
    );
    return e.hasCustomAnchor ? i : /* @__PURE__ */ p.jsx(_, { asChild: !0, ...r, children: i });
  }
);
y.displayName = S;
var R = "PopoverPortal", [X, Y] = j(R, {
  forceMount: void 0
}), D = (o) => {
  const { __scopePopover: n, forceMount: t, children: s, container: e } = o, r = u(R, n);
  return /* @__PURE__ */ p.jsx(X, { scope: n, forceMount: t, children: /* @__PURE__ */ p.jsx(E, { present: t || r.open, children: /* @__PURE__ */ p.jsx(Z, { asChild: !0, container: e, children: s }) }) });
};
D.displayName = R;
var f = "PopoverContent", M = c.forwardRef(
  (o, n) => {
    const t = Y(f, o.__scopePopover), { forceMount: s = t.forceMount, ...e } = o, r = u(f, o.__scopePopover);
    return /* @__PURE__ */ p.jsx(E, { present: s || r.open, children: r.modal ? /* @__PURE__ */ p.jsx(eo, { ...e, ref: n }) : /* @__PURE__ */ p.jsx(ro, { ...e, ref: n }) });
  }
);
M.displayName = f;
var oo = q("PopoverContent.RemoveScroll"), eo = c.forwardRef(
  (o, n) => {
    const t = u(f, o.__scopePopover), s = c.useRef(null), e = A(n, s), r = c.useRef(!1);
    return c.useEffect(() => {
      const a = s.current;
      if (a) return B(a);
    }, []), /* @__PURE__ */ p.jsx(J, { as: oo, allowPinchZoom: !0, children: /* @__PURE__ */ p.jsx(
      k,
      {
        ...o,
        ref: e,
        trapFocus: t.open,
        disableOutsidePointerEvents: !0,
        onCloseAutoFocus: P(o.onCloseAutoFocus, (a) => {
          a.preventDefault(), r.current || t.triggerRef.current?.focus();
        }),
        onPointerDownOutside: P(
          o.onPointerDownOutside,
          (a) => {
            const i = a.detail.originalEvent, d = i.button === 0 && i.ctrlKey === !0, v = i.button === 2 || d;
            r.current = v;
          },
          { checkForDefaultPrevented: !1 }
        ),
        onFocusOutside: P(
          o.onFocusOutside,
          (a) => a.preventDefault(),
          { checkForDefaultPrevented: !1 }
        )
      }
    ) });
  }
), ro = c.forwardRef(
  (o, n) => {
    const t = u(f, o.__scopePopover), s = c.useRef(!1), e = c.useRef(!1);
    return /* @__PURE__ */ p.jsx(
      k,
      {
        ...o,
        ref: n,
        trapFocus: !1,
        disableOutsidePointerEvents: !1,
        onCloseAutoFocus: (r) => {
          o.onCloseAutoFocus?.(r), r.defaultPrevented || (s.current || t.triggerRef.current?.focus(), r.preventDefault()), s.current = !1, e.current = !1;
        },
        onInteractOutside: (r) => {
          o.onInteractOutside?.(r), r.defaultPrevented || (s.current = !0, r.detail.originalEvent.type === "pointerdown" && (e.current = !0));
          const a = r.target;
          t.triggerRef.current?.contains(a) && r.preventDefault(), r.detail.originalEvent.type === "focusin" && e.current && r.preventDefault();
        }
      }
    );
  }
), k = c.forwardRef(
  (o, n) => {
    const {
      __scopePopover: t,
      trapFocus: s,
      onOpenAutoFocus: e,
      onCloseAutoFocus: r,
      disableOutsidePointerEvents: a,
      onEscapeKeyDown: i,
      onPointerDownOutside: d,
      onFocusOutside: v,
      onInteractOutside: g,
      ...h
    } = o, l = u(f, t), x = m(t);
    return H(), /* @__PURE__ */ p.jsx(
      K,
      {
        asChild: !0,
        loop: !0,
        trapped: s,
        onMountAutoFocus: e,
        onUnmountAutoFocus: r,
        children: /* @__PURE__ */ p.jsx(
          G,
          {
            asChild: !0,
            disableOutsidePointerEvents: a,
            onInteractOutside: g,
            onEscapeKeyDown: i,
            onPointerDownOutside: d,
            onFocusOutside: v,
            onDismiss: () => l.onOpenChange(!1),
            children: /* @__PURE__ */ p.jsx(
              U,
              {
                "data-state": T(l.open),
                role: "dialog",
                id: l.contentId,
                ...x,
                ...h,
                ref: n,
                style: {
                  ...h.style,
                  "--radix-popover-content-transform-origin": "var(--radix-popper-transform-origin)",
                  "--radix-popover-content-available-width": "var(--radix-popper-available-width)",
                  "--radix-popover-content-available-height": "var(--radix-popper-available-height)",
                  "--radix-popover-trigger-width": "var(--radix-popper-anchor-width)",
                  "--radix-popover-trigger-height": "var(--radix-popper-anchor-height)"
                }
              }
            )
          }
        )
      }
    );
  }
), I = "PopoverClose", to = c.forwardRef(
  (o, n) => {
    const { __scopePopover: t, ...s } = o, e = u(I, t);
    return /* @__PURE__ */ p.jsx(
      w.button,
      {
        type: "button",
        ...s,
        ref: n,
        onClick: P(o.onClick, () => e.onOpenChange(!1))
      }
    );
  }
);
to.displayName = I;
var no = "PopoverArrow", so = c.forwardRef(
  (o, n) => {
    const { __scopePopover: t, ...s } = o, e = m(t);
    return /* @__PURE__ */ p.jsx(W, { ...e, ...s, ref: n });
  }
);
so.displayName = no;
function T(o) {
  return o ? "open" : "closed";
}
var Oo = b, _o = N, Eo = y, wo = D, jo = M;
export {
  _o as Anchor,
  jo as Content,
  b as Popover,
  N as PopoverAnchor,
  so as PopoverArrow,
  to as PopoverClose,
  M as PopoverContent,
  D as PopoverPortal,
  y as PopoverTrigger,
  wo as Portal,
  Oo as Root,
  Eo as Trigger
};
