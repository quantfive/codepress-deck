import { useRef as o, useEffect as p, useCallback as c } from "react";
function l(t) {
  var r = o(t);
  return p(() => {
    r.current = t;
  }), c((e, a) => r.current && r.current(e, a), []);
}
var i = (t) => "touches" in t, g = (t) => {
  !i(t) && t.preventDefault && t.preventDefault();
}, f = function(r, e, a) {
  return e === void 0 && (e = 0), a === void 0 && (a = 1), r > a ? a : r < e ? e : r;
}, n = (t, r) => {
  var e = t.getBoundingClientRect(), a = i(r) ? r.touches[0] : r;
  return {
    left: f((a.pageX - (e.left + window.pageXOffset)) / e.width),
    top: f((a.pageY - (e.top + window.pageYOffset)) / e.height),
    width: e.width,
    height: e.height,
    x: a.pageX - (e.left + window.pageXOffset),
    y: a.pageY - (e.top + window.pageYOffset)
  };
};
export {
  f as clamp,
  n as getRelativePosition,
  i as isTouch,
  g as preventDefaultMove,
  l as useEventCallback
};
