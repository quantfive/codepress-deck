import { DEBUG_BUILD as t } from "./index208.js";
import { defineIntegration as c } from "./index144.js";
import { debug as o } from "./index151.js";
import { getPossibleEventMessages as g } from "./index214.js";
import { getEventDescription as i } from "./index121.js";
import { stringMatchesSomePattern as l } from "./index152.js";
const p = [
  /^Script error\.?$/,
  /^Javascript error: Script error\.? on line 0$/,
  /^ResizeObserver loop completed with undelivered notifications.$/,
  // The browser logs this when a ResizeObserver handler takes a bit longer. Usually this is not an actual issue though. It indicates slowness.
  /^Cannot redefine property: googletag$/,
  // This is thrown when google tag manager is used in combination with an ad blocker
  /^Can't find variable: gmo$/,
  // Error from Google Search App https://issuetracker.google.com/issues/396043331
  /^undefined is not an object \(evaluating 'a\.[A-Z]'\)$/,
  // Random error that happens but not actionable or noticeable to end-users.
  `can't redefine non-configurable property "solana"`,
  // Probably a browser extension or custom browser (Brave) throwing this error
  "vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)",
  // Error thrown by GTM, seemingly not affecting end-users
  "Can't find variable: _AutofillCallbackHandler",
  // Unactionable error in instagram webview https://developers.facebook.com/community/threads/320013549791141/
  /^Non-Error promise rejection captured with value: Object Not Found Matching Id:\d+, MethodName:simulateEvent, ParamCount:\d+$/,
  // unactionable error from CEFSharp, a .NET library that embeds chromium in .NET apps
  /^Java exception was raised during method invocation$/
  // error from Facebook Mobile browser (https://github.com/getsentry/sentry-javascript/issues/15065)
], m = "EventFilters", E = c((r = {}) => {
  let e;
  return {
    name: m,
    setup(n) {
      const a = n.getOptions();
      e = u(r, a);
    },
    processEvent(n, a, d) {
      if (!e) {
        const f = d.getOptions();
        e = u(r, f);
      }
      return h(n, e) ? null : n;
    }
  };
}), F = c((r = {}) => ({
  ...E(r),
  name: "InboundFilters"
}));
function u(r = {}, e = {}) {
  return {
    allowUrls: [...r.allowUrls || [], ...e.allowUrls || []],
    denyUrls: [...r.denyUrls || [], ...e.denyUrls || []],
    ignoreErrors: [
      ...r.ignoreErrors || [],
      ...e.ignoreErrors || [],
      ...r.disableErrorDefaults ? [] : p
    ],
    ignoreTransactions: [...r.ignoreTransactions || [], ...e.ignoreTransactions || []]
  };
}
function h(r, e) {
  if (r.type) {
    if (r.type === "transaction" && v(r, e.ignoreTransactions))
      return t && o.warn(
        `Event dropped due to being matched by \`ignoreTransactions\` option.
Event: ${i(r)}`
      ), !0;
  } else {
    if (b(r, e.ignoreErrors))
      return t && o.warn(
        `Event dropped due to being matched by \`ignoreErrors\` option.
Event: ${i(r)}`
      ), !0;
    if ($(r))
      return t && o.warn(
        `Event dropped due to not having an error message, error type or stacktrace.
Event: ${i(
          r
        )}`
      ), !0;
    if (U(r, e.denyUrls))
      return t && o.warn(
        `Event dropped due to being matched by \`denyUrls\` option.
Event: ${i(
          r
        )}.
Url: ${s(r)}`
      ), !0;
    if (!y(r, e.allowUrls))
      return t && o.warn(
        `Event dropped due to not being matched by \`allowUrls\` option.
Event: ${i(
          r
        )}.
Url: ${s(r)}`
      ), !0;
  }
  return !1;
}
function b(r, e) {
  return e?.length ? g(r).some((n) => l(n, e)) : !1;
}
function v(r, e) {
  if (!e?.length)
    return !1;
  const n = r.transaction;
  return n ? l(n, e) : !1;
}
function U(r, e) {
  if (!e?.length)
    return !1;
  const n = s(r);
  return n ? l(n, e) : !1;
}
function y(r, e) {
  if (!e?.length)
    return !0;
  const n = s(r);
  return n ? l(n, e) : !0;
}
function _(r = []) {
  for (let e = r.length - 1; e >= 0; e--) {
    const n = r[e];
    if (n && n.filename !== "<anonymous>" && n.filename !== "[native code]")
      return n.filename || null;
  }
  return null;
}
function s(r) {
  try {
    const n = [...r.exception?.values ?? []].reverse().find((a) => a.mechanism?.parent_id === void 0 && a.stacktrace?.frames?.length)?.stacktrace?.frames;
    return n ? _(n) : null;
  } catch {
    return t && o.error(`Cannot extract url for event ${i(r)}`), null;
  }
}
function $(r) {
  return r.exception?.values?.length ? (
    // No top-level message
    !r.message && // There are no exception values that have a stacktrace, a non-generic-Error type or value
    !r.exception.values.some((e) => e.stacktrace || e.type && e.type !== "Error" || e.value)
  ) : !1;
}
export {
  E as eventFiltersIntegration,
  F as inboundFiltersIntegration
};
