import { j as t } from "./index7.js";
import v, { useState as N, useEffect as A } from "react";
import { Input as G } from "./index51.js";
import { Label as me } from "./index52.js";
import { Popover as E, PopoverTrigger as O, PopoverContent as R } from "./index57.js";
import { ToggleGroup as K, ToggleGroupItem as w } from "./index55.js";
import { useVisualEditor as ge } from "./index6.js";
import { getElementValues as pe } from "./index14.js";
import { useRepository as xe } from "./index10.js";
import ye from "./index171.js";
import we from "./index176.js";
import be from "./index178.js";
import je from "./index183.js";
import Ce from "./index182.js";
import Ne from "./index174.js";
import Se from "./index172.js";
import ke from "./index175.js";
import ve from "./index173.js";
import Ae from "./index229.js";
import ze from "./index179.js";
import Ee from "./index230.js";
function Oe() {
  let p;
  do
    p = `new_span_${Ee()}`;
  while (document.querySelector(`[codepress-data-fp="${p}"]`));
  return p;
}
const D = () => /* @__PURE__ */ t.jsx("div", { className: "w-px h-6 bg-slate-300" }), Ze = ({ popoverContainer: p, onClose: J }) => {
  const {
    activeElementFpId: b,
    trackedElements: S,
    updateActiveElementStyle: h,
    editingState: W
  } = ge(), { colors: H } = xe(), o = b ? S[b]?.element : null, k = b ? S[b]?.currentValues : null, [c, j] = N({
    italic: !1,
    underline: !1,
    strikethrough: !1,
    color: "#000000",
    textAlign: "left",
    fontSize: "16px",
    fontWeight: "normal"
  }), X = [
    c.italic && "italic",
    c.underline && "underline",
    c.strikethrough && "strikethrough"
  ].filter(Boolean), [Q, I] = N(!1), [Y, Z] = N(!1), [ee, T] = N(!1), [_, F] = N(""), [te, P] = N(!1), z = v.useRef(null), V = v.useRef(b), $ = v.useRef(S), B = v.useRef(h);
  A(() => {
    V.current = b;
  }, [b]), A(() => {
    $.current = S;
  }, [S]), A(() => {
    B.current = h;
  }, [h]), A(() => {
    const e = () => {
      if (!o) return;
      const r = window.getSelection();
      if (!r || r.rangeCount === 0)
        return;
      const n = r.getRangeAt(0);
      o.contains(n.commonAncestorContainer) ? r.isCollapsed || (z.current = n.cloneRange()) : z.current = null;
    };
    return document.addEventListener("selectionchange", e), () => document.removeEventListener("selectionchange", e);
  }, [o]);
  const ne = v.useMemo(() => {
    const e = c.fontWeight;
    if (!e || e === "normal") return !1;
    const r = parseInt(e, 10);
    return isNaN(r) ? !0 : r >= 500;
  }, [c.fontWeight]);
  A(() => {
    if (!o || !k) return;
    const e = (l) => {
      if (W === "normal")
        return k[l] ?? "";
      const u = `${W}_${l}`, s = k[u];
      return s !== void 0 && s !== "" ? s : k[l] ?? "";
    }, r = e("fontWeight"), n = e("fontStyle"), i = e("textDecoration");
    j({
      italic: n === "italic",
      underline: i.includes("underline"),
      strikethrough: i.includes("line-through"),
      color: e("color"),
      textAlign: e("textAlign"),
      fontSize: e("fontSize"),
      fontWeight: r || "normal"
    });
  }, [o, k, W]);
  const m = (e, r, n) => {
    if (!e) return !1;
    const i = z.current;
    i && e.contains(i.commonAncestorContainer);
    const l = () => {
      if (!i) return null;
      let a = i.commonAncestorContainer;
      for (a.nodeType === Node.TEXT_NODE && (a = a.parentElement); a && a !== e; ) {
        if (a.nodeType === Node.ELEMENT_NODE && a.tagName === "SPAN")
          return a;
        a = a.parentNode;
      }
      return null;
    }, u = (a, f) => {
      if (!f) return !1;
      const g = document.createRange();
      return g.selectNodeContents(a), g.compareBoundaryPoints(Range.START_TO_START, f) === 0 && g.compareBoundaryPoints(Range.END_TO_END, f) === 0;
    };
    if (!i)
      return !1;
    let s;
    const d = l();
    d && u(d, i) ? s = d : (s = document.createElement("span"), s.setAttribute("codepress-data-fp", Oe()), i.surroundContents(s));
    try {
      const a = document.createRange();
      a.selectNodeContents(s);
      const f = window.getSelection();
      f && (f.removeAllRanges(), f.addRange(a)), z.current = a.cloneRange();
      const g = pe(s), ue = new CustomEvent("codepress-select-element", {
        detail: { element: s, initialValues: g }
      });
      document.dispatchEvent(ue);
      const C = (L) => {
        const x = (y) => {
          try {
            const U = V.current, he = $.current, fe = B.current;
            if ((U ? he[U]?.element : null) === s) {
              fe(L);
              return;
            }
            y > 0 && setTimeout(() => x(y - 1), 16);
          } catch {
          }
        };
        x(10);
      }, de = () => {
        switch (r) {
          case "italic":
            s.style.fontStyle = n ? "italic" : "normal", C({ fontStyle: n ? "italic" : "normal" });
            break;
          case "underline": {
            const x = (window.getComputedStyle(s).textDecorationLine || "").includes("line-through"), y = n ? x ? "underline line-through" : "underline" : x ? "line-through" : "none";
            s.style.textDecoration = y, C({ textDecoration: y });
            break;
          }
          case "strikethrough": {
            const x = (window.getComputedStyle(s).textDecorationLine || "").includes("underline"), y = n ? x ? "underline line-through" : "line-through" : x ? "underline" : "none";
            s.style.textDecoration = y, C({ textDecoration: y });
            break;
          }
          case "fontWeight":
            s.style.fontWeight = n, C({ fontWeight: n });
            break;
          case "color":
            s.style.color = n, C({ color: n });
            break;
          case "fontSize":
            s.style.fontSize = n, C({ fontSize: n });
            break;
        }
      };
      requestAnimationFrame(() => requestAnimationFrame(de));
    } catch {
      const g = {
        italic: "italic",
        underline: "underline",
        strikethrough: "strikeThrough",
        fontWeight: "bold"
      }[r];
      g && document.execCommand(g, !1);
    }
    return !0;
  }, oe = (e) => {
    if (!o) return;
    const r = e.includes("italic"), n = e.includes("underline"), i = e.includes("strikethrough");
    if (c.italic !== r && (m(o, "italic", r) || h({ fontStyle: r ? "italic" : "normal" })), c.underline !== n || c.strikethrough !== i) {
      const l = [];
      n && l.push("underline"), i && l.push("line-through");
      const u = m(o, "underline", n), s = m(o, "strikethrough", i);
      if (!u && !s) {
        o.style.textDecoration = l.length > 0 ? l.join(" ") : "none";
        const d = [];
        n && d.push("underline"), i && d.push("line-through"), h({
          fontStyle: r ? "italic" : "normal",
          textDecoration: d.length > 0 ? d.join(" ") : "none"
        });
      }
    }
    j((l) => ({
      ...l,
      italic: r,
      underline: n,
      strikethrough: i
    }));
  }, M = (e) => {
    if (!o) return;
    j({ ...c, color: e }), m(o, "color", e) || h({ color: e });
  }, re = (e) => {
    if (!o) return;
    j({ ...c, textAlign: e }), m(o, "textAlign", e) || h({ textAlign: e });
  }, se = (e) => {
    const r = e.target.value;
    j({ ...c, fontSize: r });
  }, ie = (e) => {
    if (!o) return;
    m(o, "fontSize", e) || h({ fontSize: e });
  }, le = (e) => {
    if (!o) return;
    const r = e.currentTarget;
    if (e.key === "Enter") {
      const n = r.value;
      m(o, "fontSize", n) || h({ fontSize: n }), r.blur();
      return;
    }
    if (e.key === "ArrowUp" || e.key === "ArrowDown") {
      e.preventDefault();
      const n = e.key === "ArrowUp" ? 1 : -1, i = r.value.trim().match(/^(-?\d+)(.*)$/);
      if (!i) return;
      const l = parseInt(i[1], 10), u = i[2] || "px", d = `${Math.max(1, l + n)}${u}`;
      r.value = d, j((f) => ({ ...f, fontSize: d })), m(o, "fontSize", d) || h({ fontSize: d });
    }
  }, ae = (e) => {
    if (!o) return;
    const r = e.target.value;
    m(o, "fontSize", r) || h({ fontSize: r });
  }, ce = (e) => {
    if (!o) return;
    const n = e ? ((u) => {
      const s = u.trim(), d = /^[a-z][a-z0-9+.+-]*:/i.test(s), a = s.startsWith("//"), f = s.startsWith("/"), g = s.startsWith("#");
      return d || a || f || g ? s : `https://${s}`;
    })(e) : "", i = o.tagName === "A" ? o : o.closest("a");
    if (!n) {
      if (i) {
        const u = document.createDocumentFragment();
        for (; i.firstChild; )
          u.appendChild(i.firstChild);
        i.parentNode?.replaceChild(u, i);
      }
      return;
    }
    if (i) {
      i.href = n, h({ href: n });
      return;
    }
    const l = document.createElement("a");
    l.href = n, l.style.color = "inherit", l.style.textDecoration = "inherit", Array.from(o.attributes).forEach((u) => {
      u.name.startsWith("codepress-") && l.setAttribute(u.name, u.value);
    }), o.parentNode?.insertBefore(l, o), l.appendChild(o), h({ href: n });
  }, q = (e) => {
    if (!o) return;
    j((n) => ({
      ...n,
      fontWeight: e
    })), m(o, "fontWeight", e) || h({ fontWeight: e });
  };
  return o && o.tagName.toLowerCase() === "img" ? null : /* @__PURE__ */ t.jsxs("div", { className: "flex items-center space-x-2", children: [
    /* @__PURE__ */ t.jsx(
      G,
      {
        id: "font-size",
        type: "text",
        className: "w-24 h-8 text-sm",
        value: c.fontSize,
        onChange: se,
        onCommit: ie,
        onBlur: ae,
        onKeyDown: le,
        defaultUnit: "px",
        startEnhancer: /* @__PURE__ */ t.jsx(ye, { className: "w-4 h-4 text-slate-500" })
      }
    ),
    /* @__PURE__ */ t.jsx(D, {}),
    /* @__PURE__ */ t.jsxs(
      K,
      {
        type: "multiple",
        value: X,
        onValueChange: oe,
        className: "space-x-1",
        children: [
          /* @__PURE__ */ t.jsxs(
            E,
            {
              open: te,
              onOpenChange: P,
              children: [
                /* @__PURE__ */ t.jsx(O, { asChild: !0, children: /* @__PURE__ */ t.jsx(
                  w,
                  {
                    value: "fontWeight",
                    "aria-label": "Font Weight",
                    onPointerDown: (e) => {
                      e.preventDefault();
                    },
                    className: ne ? "bg-gray-300 dark:bg-gray-700 text-gray-900 dark:text-gray-100 shadow-sm" : "",
                    children: /* @__PURE__ */ t.jsx(we, { className: "w-4 h-4" })
                  }
                ) }),
                /* @__PURE__ */ t.jsxs(
                  R,
                  {
                    className: "w-auto p-2 bg-white rounded-lg shadow-lg border-slate-200 z-[9999999999]",
                    container: p,
                    sideOffset: 16,
                    children: [
                      /* @__PURE__ */ t.jsxs("div", { className: "flex items-center justify-between mb-1", children: [
                        /* @__PURE__ */ t.jsx("span", { className: "text-[12px] font-medium text-gray-500", children: "Font Weight" }),
                        c.fontWeight && c.fontWeight !== "normal" && /* @__PURE__ */ t.jsx(
                          "button",
                          {
                            className: "text-[12px] text-blue-500 hover:underline cursor-pointer",
                            onClick: () => {
                              q("normal"), P(!1);
                            },
                            children: "Clear"
                          }
                        )
                      ] }),
                      /* @__PURE__ */ t.jsx("div", { className: "grid grid-cols-3 gap-1", children: ["400", "500", "600", "700", "800", "900"].map((e) => /* @__PURE__ */ t.jsx(
                        "button",
                        {
                          className: `px-2 py-1 text-sm rounded-md hover:bg-slate-100 cursor-pointer ${c.fontWeight === e ? "bg-slate-200" : ""}`,
                          style: { fontWeight: parseInt(e, 10) },
                          onClick: () => {
                            q(e), P(!1);
                          },
                          children: e
                        },
                        e
                      )) })
                    ]
                  }
                )
              ]
            }
          ),
          /* @__PURE__ */ t.jsx(w, { value: "italic", "aria-label": "Italic", children: /* @__PURE__ */ t.jsx(be, { className: "w-4 h-4" }) }),
          /* @__PURE__ */ t.jsx(w, { value: "underline", "aria-label": "Underline", children: /* @__PURE__ */ t.jsx(je, { className: "w-4 h-4" }) }),
          /* @__PURE__ */ t.jsx(w, { value: "strikethrough", "aria-label": "Strikethrough", children: /* @__PURE__ */ t.jsx(Ce, { className: "w-4 h-4" }) })
        ]
      }
    ),
    /* @__PURE__ */ t.jsx(D, {}),
    /* @__PURE__ */ t.jsxs(
      K,
      {
        type: "single",
        value: c.textAlign,
        onValueChange: (e) => e && re(e),
        className: "space-x-1",
        children: [
          /* @__PURE__ */ t.jsx(w, { value: "left", "aria-label": "Align Left", children: /* @__PURE__ */ t.jsx(Ne, { className: "w-4 h-4" }) }),
          /* @__PURE__ */ t.jsx(w, { value: "center", "aria-label": "Align Center", children: /* @__PURE__ */ t.jsx(Se, { className: "w-4 h-4" }) }),
          /* @__PURE__ */ t.jsx(w, { value: "right", "aria-label": "Align Right", children: /* @__PURE__ */ t.jsx(ke, { className: "w-4 h-4" }) }),
          /* @__PURE__ */ t.jsx(w, { value: "justify", "aria-label": "Justify", children: /* @__PURE__ */ t.jsx(ve, { className: "w-4 h-4" }) })
        ]
      }
    ),
    /* @__PURE__ */ t.jsx(D, {}),
    /* @__PURE__ */ t.jsxs(E, { open: Q, onOpenChange: I, children: [
      /* @__PURE__ */ t.jsx(O, { asChild: !0, children: /* @__PURE__ */ t.jsx("button", { className: "p-2 rounded-md hover:bg-slate-100 relative", children: /* @__PURE__ */ t.jsx(
        "div",
        {
          className: "w-5 h-5 rounded-full border border-slate-300",
          style: { backgroundColor: c.color }
        }
      ) }) }),
      /* @__PURE__ */ t.jsx(
        R,
        {
          className: "w-auto p-2 bg-white rounded-lg shadow-lg border-slate-200 z-[9999999999]",
          container: p,
          sideOffset: 16,
          children: /* @__PURE__ */ t.jsxs("div", { className: "flex space-x-1", children: [
            H.map((e) => /* @__PURE__ */ t.jsx(
              "button",
              {
                className: "w-6 h-6 rounded-full border border-slate-200 hover:ring-2 hover:ring-blue-400 hover:ring-opacity-60 hover:border-transparent transition-all duration-300 cursor-pointer",
                style: { backgroundColor: e },
                onClick: () => {
                  M(e), I(!1);
                }
              },
              e
            )),
            /* @__PURE__ */ t.jsxs(
              E,
              {
                open: Y,
                onOpenChange: Z,
                children: [
                  /* @__PURE__ */ t.jsx(O, { asChild: !0, children: /* @__PURE__ */ t.jsx(
                    "button",
                    {
                      className: "w-6 h-6 rounded-full border border-slate-200 cursor-pointer",
                      style: {
                        background: `conic-gradient(from 0deg, 
                      hsl(0, 100%, 50%) 0deg,
                      hsl(60, 100%, 50%) 60deg,
                      hsl(120, 100%, 50%) 120deg,
                      hsl(180, 100%, 50%) 180deg,
                      hsl(240, 100%, 50%) 240deg,
                      hsl(300, 100%, 50%) 300deg,
                      hsl(360, 100%, 50%) 360deg)`
                      }
                    }
                  ) }),
                  /* @__PURE__ */ t.jsx(
                    R,
                    {
                      className: "w-auto p-0 bg-white rounded-lg shadow-lg border-slate-200 z-[9999999999]",
                      container: p,
                      sideOffset: 16,
                      children: /* @__PURE__ */ t.jsx(
                        Ae,
                        {
                          inputType: "hexa",
                          color: c.color,
                          onChange: (e) => {
                            M(e.hex);
                          }
                        }
                      )
                    }
                  )
                ]
              }
            )
          ] })
        }
      )
    ] }),
    /* @__PURE__ */ t.jsx(D, {}),
    /* @__PURE__ */ t.jsxs(E, { open: ee, onOpenChange: T, children: [
      /* @__PURE__ */ t.jsx(O, { asChild: !0, children: /* @__PURE__ */ t.jsx(
        "button",
        {
          className: "p-2 rounded-md hover:bg-slate-100",
          onClick: () => {
            const e = o?.closest("a");
            F(e ? e.href : ""), T(!0);
          },
          children: /* @__PURE__ */ t.jsx(ze, { className: "w-4 h-4" })
        }
      ) }),
      /* @__PURE__ */ t.jsx(
        R,
        {
          className: "w-64 p-3 bg-white rounded-lg shadow-lg border-slate-200 z-[9999999999]",
          container: p,
          sideOffset: 16,
          children: /* @__PURE__ */ t.jsxs("div", { className: "space-y-2", children: [
            /* @__PURE__ */ t.jsx(me, { htmlFor: "link-url", children: "URL" }),
            /* @__PURE__ */ t.jsx(
              G,
              {
                id: "link-url",
                type: "text",
                placeholder: "https://example.com",
                value: _,
                onChange: (e) => F(e.target.value)
              }
            ),
            /* @__PURE__ */ t.jsx(
              "button",
              {
                className: "w-full px-3 py-1.5 text-sm bg-blue-500 text-white rounded-md hover:bg-blue-600",
                onClick: () => {
                  ce(_), T(!1), J();
                },
                children: "Apply"
              }
            )
          ] })
        }
      )
    ] })
  ] });
};
export {
  Ze as default
};
