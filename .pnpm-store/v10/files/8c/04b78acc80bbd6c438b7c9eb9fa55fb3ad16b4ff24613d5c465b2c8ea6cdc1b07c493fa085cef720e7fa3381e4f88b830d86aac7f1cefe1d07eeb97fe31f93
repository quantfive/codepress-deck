import { WINDOW as o } from "./index242.js";
import { addHandler as c, maybeInstrument as f, triggerHandlers as l } from "./index222.js";
import { supportsHistory as p } from "./index223.js";
import { fill as u } from "./index119.js";
let e;
function g(r) {
  const t = "history";
  c(t, r), f(t, d);
}
function d() {
  if (o.addEventListener("popstate", () => {
    const t = o.location.href, n = e;
    if (e = t, n === t)
      return;
    l("history", { from: n, to: t });
  }), !p())
    return;
  function r(t) {
    return function(...n) {
      const i = n.length > 2 ? n[2] : void 0;
      if (i) {
        const a = e, s = h(String(i));
        if (e = s, a === s)
          return t.apply(this, n);
        l("history", { from: a, to: s });
      }
      return t.apply(this, n);
    };
  }
  u(o.history, "pushState", r), u(o.history, "replaceState", r);
}
function h(r) {
  try {
    return new URL(r, o.location.origin).toString();
  } catch {
    return r;
  }
}
export {
  g as addHistoryInstrumentationHandler,
  d as instrumentHistory
};
