import { DEBUG_BUILD as u } from "./index208.js";
import { debug as n } from "./index151.js";
const t = [];
function m(s, e) {
  const f = {};
  return e.forEach((p) => {
    p && a(s, p, f);
  }), f;
}
function E(s, e) {
  for (const f of e)
    f?.afterAllSetup && f.afterAllSetup(s);
}
function a(s, e, f) {
  if (f[e.name]) {
    u && n.log(`Integration skipped because it was already installed: ${e.name}`);
    return;
  }
  if (f[e.name] = e, t.indexOf(e.name) === -1 && typeof e.setupOnce == "function" && (e.setupOnce(), t.push(e.name)), e.setup && typeof e.setup == "function" && e.setup(s), typeof e.preprocessEvent == "function") {
    const p = e.preprocessEvent.bind(e);
    s.on("preprocessEvent", (o, c) => p(o, c, s));
  }
  if (typeof e.processEvent == "function") {
    const p = e.processEvent.bind(e), o = Object.assign((c, r) => p(c, r, s), {
      id: e.name
    });
    s.addEventProcessor(o);
  }
  u && n.log(`Integration installed: ${e.name}`);
}
function I(s) {
  return s;
}
export {
  E as afterSetupIntegrations,
  I as defineIntegration,
  t as installedIntegrations,
  a as setupIntegration,
  m as setupIntegrations
};
