import { GLOBAL_OBJ as s } from "./index117.js";
import { getLocationHref as m } from "./index118.js";
import { getOriginalFunction as d, markFunctionWrapped as f, addNonEnumerableProperty as y } from "./index119.js";
import { withScope as g } from "./index120.js";
import { addExceptionTypeValue as h, addExceptionMechanism as O } from "./index121.js";
import { captureException as l } from "./index64.js";
const u = s;
let a = 0;
function j() {
  return a > 0;
}
function _() {
  a++, setTimeout(() => {
    a--;
  });
}
function w(r, o = {}) {
  function c(t) {
    return typeof t == "function";
  }
  if (!c(r))
    return r;
  try {
    const t = r.__sentry_wrapped__;
    if (t)
      return typeof t == "function" ? t : r;
    if (d(r))
      return r;
  } catch {
    return r;
  }
  const e = function(...t) {
    try {
      const i = t.map((p) => w(p, o));
      return r.apply(this, i);
    } catch (i) {
      throw _(), g((p) => {
        p.addEventProcessor((n) => (o.mechanism && (h(n, void 0), O(n, o.mechanism)), n.extra = {
          ...n.extra,
          arguments: t
        }, n)), l(i);
      }), i;
    }
  };
  try {
    for (const t in r)
      Object.prototype.hasOwnProperty.call(r, t) && (e[t] = r[t]);
  } catch {
  }
  f(e, r), y(r, "__sentry_wrapped__", e);
  try {
    Object.getOwnPropertyDescriptor(e, "name").configurable && Object.defineProperty(e, "name", {
      get() {
        return r.name;
      }
    });
  } catch {
  }
  return e;
}
function q() {
  const r = m(), { referrer: o } = u.document || {}, { userAgent: c } = u.navigator || {}, e = {
    ...o && { Referer: o },
    ...c && { "User-Agent": c }
  };
  return {
    url: r,
    headers: e
  };
}
export {
  u as WINDOW,
  q as getHttpRequestData,
  _ as ignoreNextOnError,
  j as shouldIgnoreOnError,
  w as wrap
};
