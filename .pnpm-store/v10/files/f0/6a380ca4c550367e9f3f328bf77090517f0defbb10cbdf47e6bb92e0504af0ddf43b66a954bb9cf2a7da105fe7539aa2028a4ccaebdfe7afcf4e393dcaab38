import { DEBUG_BUILD as f } from "./index243.js";
import { WINDOW as i } from "./index242.js";
import { isNativeFunction as a } from "./index223.js";
import { debug as m } from "./index151.js";
const r = {};
function s(t) {
  const c = r[t];
  if (c)
    return c;
  let e = i[t];
  if (a(e))
    return r[t] = e.bind(i);
  const o = i.document;
  if (o && typeof o.createElement == "function")
    try {
      const n = o.createElement("iframe");
      n.hidden = !0, o.head.appendChild(n);
      const d = n.contentWindow;
      d?.[t] && (e = d[t]), o.head.removeChild(n);
    } catch (n) {
      f && m.warn(`Could not create sandbox iframe for ${t} check, bailing to window.${t}: `, n);
    }
  return e && (r[t] = e.bind(i));
}
function b(t) {
  r[t] = void 0;
}
export {
  b as clearCachedImplementation,
  s as getNativeImplementation
};
