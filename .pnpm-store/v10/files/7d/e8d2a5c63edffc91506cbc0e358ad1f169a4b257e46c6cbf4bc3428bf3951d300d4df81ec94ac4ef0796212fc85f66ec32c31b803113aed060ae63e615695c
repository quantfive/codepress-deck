import { logger as c } from "./index12.js";
function a() {
  const n = [];
  try {
    const t = document.querySelectorAll("[codepress-data-fp]"), e = document.querySelectorAll("*").length;
    let r = 0;
    document.querySelectorAll("*").forEach((l) => {
      l.shadowRoot && r++;
    });
    const s = [];
    document.body.onmousedown !== null && s.push("mousedown"), document.body.onmousemove !== null && s.push("mousemove"), document.body.onmouseup !== null && s.push("mouseup");
    const d = !!(window.chrome?.runtime?.getManifest || window.browser?.runtime?.getManifest), o = document.readyState === "complete";
    return {
      elementsWithCodePressData: t.length,
      shadowDomElements: r,
      eventListeners: s,
      browserExtensionContext: d,
      domReady: o,
      errors: n
    };
  } catch (t) {
    const e = t instanceof Error ? t.message : String(t);
    return n.push(e), c.error("Error during drag & drop debug:", t), {
      elementsWithCodePressData: 0,
      shadowDomElements: 0,
      eventListeners: [],
      browserExtensionContext: !1,
      domReady: !1,
      errors: n
    };
  }
}
function i() {
  const n = document.querySelectorAll("[codepress-data-fp]");
  n.forEach((t, e) => {
    const r = t.getBoundingClientRect(), s = window.pageYOffset || document.documentElement.scrollTop, d = window.pageXOffset || document.documentElement.scrollLeft, o = document.createElement("div");
    o.style.cssText = `
      position: absolute;
      width: 20px;
      height: 20px;
      background: #ff0000;
      color: white;
      font-size: 10px;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 999999;
      pointer-events: auto;
      border-radius: 3px;
      left: ${r.left + d - 10}px;
      top: ${r.top + s - 10}px;
    `, o.textContent = String(e + 1), o.title = `Test handle for ${t.tagName}`, o.addEventListener("click", () => {
      c.info(`Test handle ${e + 1} clicked for element:`, t), o.style.background = "#00ff00", setTimeout(() => {
        o.style.background = "#ff0000";
      }, 500);
    }), document.body.appendChild(o), setTimeout(() => {
      o.remove();
    }, 1e4);
  }), console.log(
    `[CodePress Debug] Created ${n.length} test drag handles. They will disappear in 10 seconds.`
  );
}
function u() {
  const n = document.querySelectorAll("[codepress-data-fp]"), t = Array.from(n).map((e) => ({
    tagName: e.tagName,
    codepressDataFp: e.getAttribute("codepress-data-fp"),
    textContent: e.textContent?.substring(0, 50) + "...",
    className: e.className,
    id: e.id,
    children: e.children.length,
    parent: e.parentElement?.tagName,
    boundingRect: e.getBoundingClientRect()
  }));
  c.info("CodePress Elements Structure:", t), console.table(t);
}
typeof window < "u" && (window.codepressDebug = {
  debugDragDropSetup: a,
  testDragHandlePositioning: i,
  logCodePressElementsStructure: u
});
export {
  a as debugDragDropSetup,
  u as logCodePressElementsStructure,
  i as testDragHandlePositioning
};
