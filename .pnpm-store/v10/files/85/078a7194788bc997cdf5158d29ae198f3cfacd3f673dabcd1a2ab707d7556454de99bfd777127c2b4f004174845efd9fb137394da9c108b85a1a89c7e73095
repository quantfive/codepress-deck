import { jsx as _jsx } from "react/jsx-runtime";
import React, { createContext, useCallback, useContext, } from "react";
import { checkGithubMode, IS_DEVELOPMENT, setGitHubMode } from "@/lib/env";
// Automatically Set to Github Mode in non development envs
if (typeof window !== "undefined") {
    if (document.readyState === "complete") {
        if (!IS_DEVELOPMENT) {
            setGitHubMode(true);
        }
    }
    else {
        window.addEventListener("load", () => {
            if (!IS_DEVELOPMENT) {
                setGitHubMode(true);
            }
        });
    }
}
export const GitHubProvider = ({ children, }) => {
    const [isGitHubMode, _setIsGitHubMode] = React.useState(() => checkGithubMode());
    const setIsGitHubMode = useCallback((on) => {
        if (setGitHubMode(on)) {
            _setIsGitHubMode(on);
        }
    }, [_setIsGitHubMode]);
    const value = {
        isGitHubMode,
        setIsGitHubMode,
    };
    return (_jsx(GitHubContainerContext.Provider, { value: value, children: children }));
};
const GitHubContainerContext = createContext(null);
export const useGitHub = () => {
    const ctx = useContext(GitHubContainerContext);
    if (!ctx)
        throw new Error("useGithubContext must be used within a GithubProvider");
    return ctx;
};
